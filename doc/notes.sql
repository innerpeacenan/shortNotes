-- MySQL dump 10.13  Distrib 5.5.48, for Linux (x86_64)
--
-- Host: localhost    Database: notes
-- ------------------------------------------------------
-- Server version	5.5.48-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `items`
--

DROP TABLE IF EXISTS `items`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `items` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',
  `fid` int(10) unsigned NOT NULL COMMENT '父节点id',
  `user_id` int(11) unsigned NOT NULL COMMENT '用户id',
  `name` char(20) NOT NULL,
  `rank` int(11) unsigned NOT NULL COMMENT '排序号(从应用程序实现默认相邻间隔10)',
  `c_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `u_time` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '更新时间,需要在修改basic_info后,或者更新了与之对应的note后,更新该字段',
  `status` tinyint(1) unsigned NOT NULL DEFAULT '2' COMMENT '{1:"show_global", 2:"enabled", 3:“draft"}',
  PRIMARY KEY (`id`),
  KEY `c_time` (`c_time`),
  KEY `u_time` (`u_time`),
  KEY `rank` (`rank`)
) ENGINE=InnoDB AUTO_INCREMENT=66 DEFAULT CHARSET=utf8 COMMENT='items';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `items`
--

LOCK TABLES `items` WRITE;
/*!40000 ALTER TABLE `items` DISABLE KEYS */;
INSERT INTO `items` VALUES (1,2,1,'note_requirement',535,'2017-05-01 02:40:03','2017-05-01 02:40:03',2),(2,0,1,'easynote',21,'2017-05-01 04:57:52','2017-05-01 04:57:52',2),(3,0,1,'supplier',30,'2017-05-04 05:33:10','2017-05-04 05:33:10',2),(4,0,1,'业务学习',20,'2017-05-04 11:02:38','2017-05-04 11:02:38',2),(5,0,1,'current',29,'2017-05-05 12:37:20','2017-05-05 12:37:20',2),(8,2,1,'complete',588,'2017-05-07 14:44:03','2017-05-07 14:44:03',1),(35,46,1,'李晓东',398,'2017-05-07 16:02:42','2017-05-07 16:02:42',2),(37,46,1,'李军',399,'2017-05-07 16:03:40','2017-05-07 16:03:40',2),(38,46,1,'徐波',399,'2017-05-07 16:03:49','2017-05-07 16:03:49',2),(40,46,1,'孙宇衡',399,'2017-05-07 16:09:12','2017-05-07 16:09:12',2),(43,0,1,'fixed',400,'2017-05-07 16:18:40','2017-05-07 16:18:40',1),(46,0,1,'interview',440,'2017-05-07 16:55:13','2017-05-07 16:55:13',2),(55,0,1,'bug',569,'2017-05-07 17:21:22','2017-05-07 17:21:22',1),(57,2,1,'computing',76,'2017-05-08 03:36:54','2017-05-08 03:36:54',2),(58,2,1,'do later',399,'2017-05-08 14:43:15','2017-05-08 14:43:15',1),(59,2,1,'todo list',629,'2017-05-15 13:43:21','2017-05-15 13:43:21',1),(60,2,1,'Contacts',587,'2017-05-15 13:47:26','2017-05-15 13:47:26',1),(61,2,1,'c',600,'2017-08-02 14:02:44','2017-08-02 14:02:44',2),(62,2,1,'php',610,'2017-08-02 14:05:29','2017-08-02 14:05:29',2),(63,2,1,'http',620,'2017-08-02 14:44:28','2017-08-02 14:44:28',2),(64,2,1,'python',628,'2017-08-02 14:47:04','2017-08-02 14:47:04',2),(65,2,1,' vue',650,'2017-08-17 15:45:38','0000-00-00 00:00:00',2);
/*!40000 ALTER TABLE `items` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `notes`
--

DROP TABLE IF EXISTS `notes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `notes` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `item_id` int(10) unsigned NOT NULL COMMENT 'eq to items.id, 项目ID',
  `content` text NOT NULL,
  `c_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `status` tinyint(1) DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=373 DEFAULT CHARSET=utf8 COMMENT='notes';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `notes`
--

LOCK TABLES `notes` WRITE;
/*!40000 ALTER TABLE `notes` DISABLE KEYS */;
INSERT INTO `notes` VALUES (15,1,'写一套登录系统,研究 session, cookie 管理, 验证码的实现机制, 邮箱实现机制和通信原理等内容, 这一块的工作量其实还是蛮大的','2017-05-01 02:42:44',1),(19,1,'设计一个命令输入框,通过该输入框,可以作一些更灵活的工作,具体的需求还需要进一步明确（rm,mv,cp,link,touch etc）,同时加计算机网络安全方面的知识，预防安全问题\n加入标签(也就是link)功能,加入对人物,时间(日程管理)和其他一些敏感词的只能连接处理,在首页部分显示整个程序的notice,error得信息,单击首页后,切换回到默认首页.','2017-05-01 03:05:08',1),(20,1,'添加前后台的数据过滤 1','2017-05-01 03:05:29',1),(27,1,'item 和 notes 的请求管理:\n(1) 在路由解析时候,加入用户自定义的item 别名到id的映射功能,让url解析跟语言话,记住,别名对应的是一个路径\n(2) 如果一个item 下面有现存的 notes,则不直接请求\n(3) 加入新旧文本内容比较,如何有更新是,再向后台发送数据\n(5) 多个输入框处于编辑状态时,一个点击保存,会使得另外一个note的\n如果没有item,在新添加的时候,新建一个item,\n<input type=\"checkbox\" checked />方案一: 手动在控制台注册.\n<input type=\"checkbox\" checked />方案一: 修改扎ffz_item 的组成就可以了','2017-05-01 05:02:52',1),(28,58,'完成该项目的组件化管理(这个需要进一步忍辱学习vue.js)\n学习 JavaScript 中的模块化思想,依赖注入','2017-05-01 05:11:17',1),(39,8,'添加到 github 中,方便做多分支开发和管理\n','2017-05-01 08:19:33',1),(42,3,'resuet() 的参数必须是非空数组\nInvalid argument supplied for foreach()','2017-05-04 07:01:28',1),(47,5,'export -> https://github.com/kenberkeley/vue-drag-drop-sort-demo \n\n无法绕过export,弄明白 export 是什么东东?','2017-05-05 12:37:50',1),(53,0,'bug: item.id 现在不会自增','2017-05-07 13:44:28',1),(64,43,'#### items\n添加了 item 归档功能\n加入排序号码,前端实现drag,后端数据库增加一个排序号字段,具体经过为:\n(1) 研究了示例中的 `CSS` 样式, 确保不会受洋市场问题困扰.\n(2) 在研究 `dragable`的`API`,在研究其中的js代码的作用(初步弄明白了`darg` 的几个重要方法和注意事项)\n(3) 并和 `vue` 整合在一起\n\n#### notes\n(要实现这个,需要重新设计样式,并进一步学习 CSS )\n表结构放弃了无限极分类的方案,通过url后后面部分,在得到 `Module`,`controller`和`action`信息后,将其余部分设计为 `current working directory`,从而实现用数据库数结构模拟文件结构\n\n添加了按下 ESC 键后,自动保存的功能\nautoHeight,具体经过为:\n(已完成)加入早期设计的text-area auto-height得特征，并弄清楚其原理\n(1)原先经过改造的auto-height可以实现自动处理粘贴事件了.通过拙劣的 set timeout 暂时实现了autoHeight 方法, auto height 现在改为监听一个回车键符号,并做相应的调整.\n(2)在使用中,发现在 document ready 后,以及 notes 数据加载好后( dom 结构未新建完成),这时候导致事件绑定失败.通过手动在控制台注册该函数可以实现.\n(3)通过传入$event解决了这个问题\n\nanchor \nwindow.location.href=\"#note_22\"\n整体调整样式\n\nmarkdown 集成成功,可以正常显示.\n\n','2017-05-08 03:36:13',1),(66,58,'String.prototype.indexOf()\nArray.prototype.splice()\nobj.hasOwnProperty(prop)\n\n<div>\n<b>todo list</b>\n<input type=\"checkbox\" checked />only use by myself,because it is easily lead to XSS vulnerabilities.\n<input type=\"checkbox\" checked /> php 源码, c 语言, php 设计模式,网络知识, mysql 事务, php unit test, composer(要学,并能快速应用,产学研相互结合)\n<input type=\"checkbox\" checked />了解了vim的一些基本要,需要安装 vim bundle\n<input type=\"checkbox\" checked /> 日常编程,卡好边界值\n<input type=\"checkbox\" checked /> 查看php源代码的时候,要记住自己代码跟踪的路径,不要忘记自己最初是要做什么\n<input type=\"checkbox\" /> 可以自定义一套 .textarea 下的样式, 从而获得更好的输入体验\n</div>','2017-05-08 14:43:41',1),(68,58,'<input type=\"checkbox\" checked />create view, \n<input type=\"checkbox\"  checked/>design view \n<input type=\"checkbox\"  checked />[了解 break attack , csrfTocen](http://breachattack.com/)[csrf](http://netsecurity.51cto.com/art/200812/102951.htm)\n','2017-05-10 02:16:08',1),(75,40,'1.【送货管理】重构工作\n2.完成了送货明细编辑数据的功能，接下来继续进行添加商品功能,进行到了送货明细编辑数据的功能. 主要研究了分类统计表结构','2017-05-11 11:41:18',1),(77,38,'微商页面修改，ps做gif图，php手册基础知识学习\n订单编辑表头固定','2017-05-12 10:55:56',1),(79,40,'1.【送货管理】重构工作\n2.今天主要进行了对送货明细数据编辑的测试加上修改，现在已经完成\n3.正在进行添加商品功能.发现逻辑错误问题，但是tp不会过滤掉，正在找寻yii下的解决思路','2017-05-12 10:56:50',1),(90,63,'[Cross-Origin Resource Sharing (CORS)](https://www.html5rocks.com/en/tutorials/cors/)\n[详细阅读 维基百科上的Cross-Site Request Forgery (CSRF) (https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)_Prevention_Cheat_Sheet#Checking_the_Origin_Header)','2017-05-15 13:45:45',1),(91,58,'在阅读框架代码和自己实现代码的时候,存在一下几个地方的不同:\n框架代码更系统,关联较多,因此自己写的代码如果直接仿写,会感觉比较比钮. 从基础方法一点一点画出流程图仿照.\n引入单元测试对写过的代码进行测试','2017-05-15 14:29:17',1),(92,58,'静下心来学习二插树.\n(2) 至此,学完了算法的基础知识.接下来要做的就是加强c语言的高级语法知识,将应用程序推向工程画.\n(3) 好需要做的就是不断巩固目前所学的算法知识,一步一步加深理解.','2017-05-16 02:33:39',1),(96,40,'1.【送货管理】重构工作\n2.今天主要完成了对新增商品的提交处理，优化了处理方案，比如对没有新增商品提交后的处理\n3.接下来进行删除送货商品的功能','2017-05-16 10:34:15',1),(100,8,'<input type=\"checkbox\"  checked/>[InnoDB的行锁模式及加锁方法](http://blog.csdn.net/xifeijian/article/details/20313977)\n<input type=\"checkbox\" checked />[什么时候使用表锁](http://blog.csdn.net/xifeijian/article/details/20313977)\n\n图书馆密码:nxn2382502','2017-05-16 12:07:00',1),(114,55,'```php\n public function var_export(&$var, $return = false)\n    {\n        // tokens\n        $indent = \'  \';\n        $doubleArrow = \' => \';\n        $lineEnd = \',\' . PHP_EOL;\n        $newLine = PHP_EOL;\n        $strDelim = \'\\\'\';\n        // use find and repace\n        $find = [null, \'\\\\\', \'\\\'\'];\n        $replace = [\'NULL\', \'\\\\\\\\\', \'\\\\\\\'\'];\n        $out = \'\';\n        // deal with value\n        switch (gettype($var)) {\n            // deal with all variable types, that is : [integer,double,string,boolean,array,object,null,resource]\n            case \'array\':\n                $out = \'[\' . $newLine;\n                foreach ($var as $k => $v) {\n                    // deal with key\n                    if (is_string($k)) {\n                        // make string key safe\n//                        $k = strtr($k, $safe);\n                        for ($i = 0, $c = count($find); $i < $c; $i++) {\n                            $k = str_replace($find[$i], $replace[$i], $k);\n                        }\n                        $k = $strDelim . $k . $strDelim;\n                    }\n\n                    if (is_array($v)) {\n                        // 数组每一层,换一行\n                        $export = $this->var_export($v, true);\n                        $v = $newLine . $export;\n                    } else {\n                        $v = $this->var_export($v, true);\n                    }\n                    // Piece line together (输出数组中的一个键值对)\n//                    中间过程一定要用 . 相互连接, 在在这个循环的过程中,中间的结果是要保留的\n                    $out .= $k . $doubleArrow . $v . $lineEnd;\n                }\n                // 拼接数组输出结果\n                $out .= \']\';\n                break;\n            case \'string\':\n                /**\n                 * If replace_pairs contains a key which is an empty string (\"\"), FALSE will be returned.\n                 * If the str is not a scalar then it is not typecasted into a string, instead a warning is raised and NULL is returned.\n                 */\n//                $var = strtr($var, $safe);\n                // 因为外层规定了单引号,所以里层的所有单引号都要转义\n                for ($i = 0, $c = count($find); $i < $c; $i++) {\n                    $var = str_replace($find[$i], $replace[$i], $var);\n                }\n                $out = $strDelim . $var . $strDelim;\n                break;\n            // Number\n            case \'integer\':\n//for historical reasons \"double\" is returned in case of a float, and not simply \"float\"\n            case \'double\' :\n            $out = (string)$var;\n            break;\n            case \'boolean\':\n                $out = $var === true ? \'true\' : \'false\';\n                break;\n//            NULL 与 resource 放在一起处理 the type of null is in upercase\n            case \'NULL\':\n            case \'resource\':\n                $out = \'NULL\';\n                break;\n            case \'object\':\n                // Start the object export\n                $out = \'class \' . get_class($var) . \'{\' . $newLine;\n                // deal with each property\n                foreach (get_object_vars($var) as $p => $ov) {\n                    $out .= \' var $\' . $p . \' = \';\n                    if (is_array($ov)) {\n                        $export = $this->var_export($ov, true);\n                        $out .= $newLine . $export . \';\' . $newLine;\n                    } else {\n                        $out .= var_export($ov, true) . \';\' . $newLine;\n                    }\n\n                }\n                $out .= \'}\';\n                break;\n        }\n        if ($return === true) {\n            return $out;\n        } else {\n            echo $out;\n        }\n    }             \n```','2017-05-22 09:37:40',1),(116,58,'`apiGen`(安装好了,但是生成的文档格式我不太满意,需要学习 `phpar`)\nMySQL 事务等缺乏应用场景\nVue 需要使用场景\nc 语言 语法是难点,算法受到 c 语言语法掌握的限制(这个最重要)\n`kmp` 字符串查找算法的过程','2017-05-23 12:36:37',1),(118,8,'弄清楚了 `typeof` 和 define 的区别\n@done reviewed about how to use `typedef` in c language.\n@done 复习了函数指针\n@done 大致了解了 kmp 字符串查找算法的过程\n@done 学习了 fp.c 中的showmenu 方法,学习了 puts() ,getchar(), strchr(), tolower() 等函数的使用,实践了LOG_MSG 宏的使用技巧\n@done 总结最近学习c语言的技巧\n@done 把输入法跟打印出来,放到键盘上,方便查找\n@done c primer typedef 515 good notes(review for the second time, I have learned too much today, just take a rest to keep energetic)\n@done 继续学习 `pf.c @see eclipse_c`\n@done测试了计数商品打印功能\n@done [gets](https://stackoverflow.com/questions/35568263/c-gets-not-working?rq=1)\n@done 编写完成了 thinkphp 到 yii2 的 ORM 简单翻译器','2017-05-23 12:45:00',1),(120,40,'.对送货打印的打印数据进行样式的修改，之前存在地址过程会覆盖掉表格的问题\n2.完成送货管理功能重构，并进行测试\n1.【送货管理】功能进行测试\n2.增加按钮功能权限，并对增加出库数量样式的修改','2017-05-23 23:08:57',1),(126,43,'目前路由机制还是存在问题,解决掉\n接下来着手写登录系统\n重构依赖加载模块,让依赖加载模块真正起到作用','2017-05-28 06:54:11',1),(129,43,'完成了一个简陋的框架设计.\n将路由机制改为方法名称中带有请求方式\n@test 实现一个view层,实现controller的render方法\n在设计中体会到了体会到了各种设计的背景,如 `__get()` 和 `__set()` 的应用,\n完成了 active record insert, delete, update, findOne 得方法的初步建立, 建立了 __get() 和 __set() 方法,建立了old attribute 属性, 初步建立了表结构模型,待完成,\n引入了验证机制等, `scenario`,`map`\n了解下主流的查询构建器的功能\n虽然这项工作花费了前前后后差不多一个月的时间,但是是非常值得的,通过这次实践,进一步提升了自己对 yii2 框架的理解\n\n\n首次在个人项目中引入了 PHP unit test.并进一步开展了单元测试,下面是单元测试使用过程中的一些回顾:\n(1)采用原始的在入口文件位置 `(new Application())->run()` 方法后, 方法会要求对请求进行处理,中间的很多环节都可能出问题,并且命令行下没有办法处理请求.回头可以看看 yii2 单元测试对同样的问题的处理方式.暂时的处理方式为:\n将 `(new Application())->run()` 改为 `(new Application())`,而后开展相关测试工作.\n单元测试测试了 `@dataProvider` 等方法\n写了第一个 DB Unit 测试实例, PHPUnit 单元测试已经在个人项目中得到应用,并结合 PHP 7 的匿名类取得了很好地效果','2017-05-28 16:45:19',1),(130,55,'之前数据结构没有规划好(AR setAttribute).\nundefined index  \'val\'\n注意定义常量的方式,之前犯过错误\n// Use of undefined constant N_DEBUG - assumed \'N_DEBUG\'\ndefined(\'N_TEST\') or define(\'N_TEST\', false);\n//PDO::quote() expects parameter 1 to be string, array given\n // db->quote 只是加一对单引号,不能正确反引表名称和列名称\n//array_key_exists() expects parameter 2 to be array, null given\n类型一定要确定好.\n\n发现一个问题,浏览器开的时间太长,会卡顿的很. 目前发现就是这个样子,我怀疑存在一定程度的内存泄露','2017-05-29 01:49:53',1),(135,58,'phpUnit\n\n#### it seemed that phpunit need wite list to generate code coverage report\n```\n--coverage-html <diretory> ItemTest.php\n```\n接下来需要进一步弄弄清楚这个问题','2017-05-30 09:31:15',1),(137,58,'高性能mysql,附录c,锁的调试\n\n实践设计模式上的命令模式,提高自己的首先思维能力 design pattern Command\n将 yii2 中的array Helper 类动手实践其中主要的一些方法. yii ArrayHellper::map方法自己动手实现\n\n(以yii2配套的swift email为例,了解其原理,计划3天)\n对邮箱的配置方法做了尝试，常量了中英文的各种帖子，了解了smtp IMAP pop3的大致用途和特点，确认了php发邮件调用的是linux下的sendMail命令，需要修改php配置文件和sendMail函数的配置文件。\n','2017-05-30 09:42:49',1),(144,43,'发现直接使用  PDO::quote() 对字符串处理后,发现存入数据库的字符串多了一对单引号, 而参数绑定中声明参数类型为 PDO::PARAM_STR 后,数据库并没有多余的字符串, 不知这是怎么回事?\n答案:其实这不是PDO::quote()的问题,而是之前组合用了sprintf 函数,造成了存入数据库的结果多了一对引号.\n\n对 load 方法进行了全覆盖测试,解决了发现的两处bug:\n(1)对 `settype()` 的返回值不了解,滥用了该函数\n(2) 联合主键情况下,拼接查询条件时,值选取存在逻辑错误\n\n1.保存的奇葩现象已经修复,原因为写代码写糊涂了,犯了一个手误的地方,导致花了半天功夫定位bug,当然,我也傻了,明明需要的是更新,结果却 inset 了, SQL 语句都打出来了,自己居然无法定位问题,\n2.when click item 4, it seemed that item 1 also clicked, why?\nthe click event was bind on <ul>, not on <li>','2017-06-01 13:02:05',1),(145,62,'程序执行时间 `mirotime()`,返回的结果形式为:\"微妙 秒\"\n','2017-06-01 15:24:55',1),(146,58,'明天先解决 `TCP dump` 后的 peal 处理错误问题,自己动手将其修正.\n为什么 ubuntu 在不关机的情况下无法切换 IP 地址\nperl命令','2017-06-04 02:16:09',1),(147,43,'实践利用header函数实现页面redirect的方法.参照 yii2 的实现方案和逻辑\n','2017-06-04 03:30:36',1),(149,8,'特别要注意二进制浮点数元算在取整,比较等方面带来的问题,要特别注意\n[二进制浮点数在计算机中的储存形式](http://www.ruanyifeng.com/blog/2010/06/ieee_floating-point_representation.html)','2017-06-04 10:31:29',1),(152,62,'php 网络爬虫\n\n``` php\n<?php\n $readcontents = fopen(\"http://www.phpres.com/index.html\", \"rb\");\n   $contents = stream_get_contents($readcontents);\n   fclose($readcontents);\n   echo $contents;\n   方法2:\n   echo file_get_contents(\"http://www.phpres.com/index.html\"); \n?>\n```\n\n[RFC 5322,邮箱验证,实际上还是挺复杂的](http://www.regular-expressions.info/email.html)\n\n在网站上GD库通常用来生成缩略图或者用来对图片加水印或者对网站数据生成报表\n\n加强文件读写这一块的函数操作,仿照 yii 写测试日志模块\n\nipv4 验证\n```\n\'/^(?:(?:2(?:[0-4][0-9]|5[0-5])|[0-1]?[0-9]?[0-9])\\.){3}(?:(?:2([0-4][0-9]|5[0-5])|[0-1]?[0-9]?[0-9]))$/\';\n```','2017-06-04 13:11:08',1),(158,62,'\n如果在低版本的 PHP unit test 中,放弃php 匿名类的使用的话,可以声明以不同的进程执行程序.期间可能由于安全原因, php_ini禁用了一些文件,重新启用这些程序就可以了.\n\n学习了更多关于 PHP unit test 的技巧和方案,彻底解决了各个测试用例之间有效隔离的问题其他方面的','2017-06-10 14:10:47',1),(159,43,'[x] 通过我的努力, controller 具有了可测试性, 接下来再写一个 log 方法,记录一个全局类,方便进行低成本半侵入式测试.\n[x] 取消测试驱动程序中对模块的 camelCase 的做法.\n[x] 重新组织测试结构,为一个控制器的各个方法建立相应的测试方法,包装后端数据接口的一致性和稳定性.\n[x] 关于 preg_split 函数中的四个反斜线,已经在 stackoverflow 上提问了\n','2017-06-11 07:52:37',1),(160,55,'发现程序的性能并不好,有时候还很卡顿,特别是打开多个类似的页面的时候,情况可能更加糟糕.\n先以查明原因: 页面高频率全屏所有内容渲染导致的,这是由于对 `vue` 动态数据绑定的一些行为误解造成的','2017-06-11 14:17:12',1),(164,62,'再次了解了  `php yeld`  关键字的用法和使用场景.','2017-06-18 01:10:13',1),(165,61,'我们可使用“-include”来代替“include”，忽略由于包含文件不存在或者无法创建时的错误提示（“-”的意思是告诉make，忽略此操作的错误。make继续执行','2017-06-18 01:42:04',1),(166,62,'```\n/home/ffz# php -r \"echo gethostbyname(\'www.baidu.com\').PHP_EOL;\"\n112.80.248.74\n```','2017-06-18 02:29:21',1),(176,61,'学习了C 语言中的的 processor glue ,Variadic Macros','2017-06-26 13:21:50',1),(181,58,'PHP streamWreaper\n\n初步了解了 php streamWrapper \n\n[有空好好看看这篇贴子,建立包](http://blog.csdn.net/u011474028/article/details/54973571)\n\n','2017-06-28 13:52:47',1),(213,46,'```\nmysql --auto-rehash -h 101.200.196.64 -P 3306 -u myffzTestRemote -pmtr#25150531 ffzerp2\n```','2017-07-10 08:19:01',1),(224,58,'下一步计划做 cdn,\n\n实际使用中发现,如果一台服务器挂掉了,站点会变得比较慢,,如何避免这个问题? 如何保障服务器上的图片的安全性','2017-07-17 09:28:46',1),(228,65,'\n\nmarkdown 和 highlight 调用的频率实在太高了，严重影响了性能。对次做了调整：\n将hightlight指令改为:\n\n```\n\n    Vue.directive(\'highlightjs\', {\n        inserted: function (el) {\n            var blocks = el.querySelectorAll(\'pre code\');\n            Array.prototype.forEach.call(blocks, hljs.highlightBlock);\n        },\n        update: function (el) {\n            var blocks = el.querySelectorAll(\'pre code\');\n            Array.prototype.forEach.call(blocks, hljs.highlightBlock);\n        }\n    });\n```\n\n通过此次改造之后，不许要时时更新。 但是仍然存在一个比较严重的问题，就是渲染的时候会更新全文的所有节点，这个是出乎意料的，目前原因还没有弄清楚，等待进一步排查问题\n\n这个问题已经弄清楚了 vue 处理数组的机制,解决方案如下:\n\n```\n    Vue.directive(\'highlightjs\', {\n        inserted: function (el) {\n            var blocks = el.querySelectorAll(\'pre code\');\n            Array.prototype.forEach.call(blocks, hljs.highlightBlock);\n        },\n        update: function (el, binding, vnode, oldVnode) {\n            if (vnode.data.domProps.innerHTML !== oldVnode.data.domProps.innerHTML) {\n                var blocks = el.querySelectorAll(\'pre code\');\n                Array.prototype.forEach.call(blocks, hljs.highlightBlock);\n            }\n\n        }\n    });\n\n```\n\n通过 vnode.data.domProps.innerHTML 前后比较,避免了不必要的highlightBlock\n','2017-07-19 09:46:12',1),(231,65,'``` javascript\n    /**\n     * Helper that recursively merges two data objects together.\n     */\n    function mergeData (to, from) {\n        if (!from) { return to }\n        var key, toVal, fromVal;\n        var keys = Object.keys(from);\n        for (var i = 0; i < keys.length; i++) {\n            key = keys[i];\n            toVal = to[key];\n            fromVal = from[key];\n            if (!hasOwn(to, key)) {\n                set(to, key, fromVal);\n            } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n                mergeData(toVal, fromVal);\n            }\n        }\n        return to\n    }\n\n```','2017-07-20 07:07:21',1),(232,64,'进入 IPYthon 交互界面\n\n```\nroot@ubuntu:/home/ffz# python3\nPython 3.5.2 (default, Sep 10 2016, 08:21:44) \n[GCC 5.4.0 20160609] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> \n```','2017-07-21 03:23:42',1),(233,64,'```\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n```\n\n第一行注释是为了告诉Linux/OS X系统，这是一个Python可执行程序，Windows系统会忽略这个注释；\n\n第二行注释是为了告诉Python解释器，按照UTF-8编码读取源代码，否则，你在源代码中写的中文输出可能会有乱码。\n\n申明了UTF-8编码并不意味着你的.py文件就是UTF-8编码的，必须并且要确保文本编辑器正在使用UTF-8 without BOM编码：\n\n\'中文\'.encode(\'utf-8\')\n\n数组最后一个元素\nclassmates[-1]','2017-07-21 05:03:54',1),(234,64,'tuple:\nA set of comma-separated values passed to a program or operating system as a parameter to a function call','2017-07-21 05:23:42',1),(235,64,'只有一个元素时，元祖要消除歧义\nt = (1,)\n\n二是通过dict提供的get方法，如果key不存在，可以返回None，或者自己指定的value：\n\n```\n>>> d.get(\'Thomas\')\n>>> d.get(\'Thomas\', -1)\n-1\n```','2017-07-21 05:25:42',1),(236,64,'重复元素在set中自动被过滤：\nset可以看成数学意义上的无序和无重复元素的集合，因此，两个set可以做数学意义上的交集、并集等操作：','2017-07-21 05:43:33',1),(237,64,'定义默认参数要牢记一点：默认参数必须指向不变对象！\n\n要修改上面的例子，我们可以用None这个不变对象来实现：\n\n```\ndef add_end(L=None):\n    if L is None:\n        L = []\n    L.append(\'END\')\n    return L\n```','2017-07-21 06:03:25',1),(238,64,'```\ndef calc(*numbers):\n    sum = 0\n    for n in numbers:\n        sum = sum + n * n\n    return sum\n```\n\n定义可变参数和定义一个list或tuple参数相比，仅仅在参数前面加了一个*号。在函数内部，参数numbers接收到的是一个tuple\n\n\n所以Python允许你在list或tuple前面加一个*号，把list或tuple的元素变成可变参数传进去：\n\n```\n>>> nums = [1, 2, 3]\n>>> calc(*nums)\n14\n```\n','2017-07-21 06:06:06',1),(239,64,'https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431752945034eb82ac80a3e64b9bb4929b16eeed1eb9000','2017-07-21 06:18:23',1),(240,64,'class Student(object):\n\n    @property\n    def score(self):\n        return self._score\n\n    @score.setter\n    def score(self, value):\n        if not isinstance(value, int):\n            raise ValueError(\'score must be an integer!\')\n        if value < 0 or value > 100:\n            raise ValueError(\'score must between 0 ~ 100!\')\n        self._score = value','2017-07-21 06:24:59',1),(241,64,'```\nclass Chain(object):\n\n    def __init__(self, path=\'\'):\n        self._path = path\n\n    def __getattr__(self, path):\n        return Chain(\'%s/%s\' % (self._path, path))\n\n    def __str__(self):\n        return self._path\n\n    __repr__ = __str__\n试试：\n\n>>> Chain().status.user.timeline.list\n\'/status/user/timeline/list\'\n```','2017-07-21 06:36:24',1),(242,64,'```\n另一种方法是在命令行通过参数-m unittest直接运行单元测试：\n\n$ python3 -m unittest mydict_test\n\n```','2017-07-21 06:46:18',1),(243,64,'python doctest\n```\n# mydict2.py\nclass Dict(dict):\n    \'\'\'\n    Simple dict but also support access as x.y style.\n\n    >>> d1 = Dict()\n    >>> d1[\'x\'] = 100\n    >>> d1.x\n    100\n    >>> d1.y = 200\n    >>> d1[\'y\']\n    200\n    >>> d2 = Dict(a=1, b=2, c=\'3\')\n    >>> d2.c\n    \'3\'\n    >>> d2[\'empty\']\n    Traceback (most recent call last):\n        ...\n    KeyError: \'empty\'\n    >>> d2.empty\n    Traceback (most recent call last):\n        ...\n    AttributeError: \'Dict\' object has no attribute \'empty\'\n    \'\'\'\n    def __init__(self, **kw):\n        super(Dict, self).__init__(**kw)\n\n    def __getattr__(self, key):\n        try:\n            return self[key]\n        except KeyError:\n            raise AttributeError(r\"\'Dict\' object has no attribute \'%s\'\" % key)\n\n    def __setattr__(self, key, value):\n        self[key] = value\n\nif __name__==\'__main__\':\n    import doctest\n    doctest.testmod()\n\n```','2017-07-21 06:50:30',1),(244,64,'python \n\n(https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431915578556ad30ab3933ae4e82a03ee2e9a4f70871000)\n\n```\n\nassert n != 0, \'n is zero!\'\nprint\nlogging\npdb.set_trace()\npdb\nPyCharm Eclipse pydev\n```','2017-07-21 06:54:24',1),(246,63,'\n> So until something changes, URI is best used when you’re referring to a resource just by its name or some other fragment. And when you’re giving both the name of a resource and the method of accessing it (like a full URL), it’s best to call that a URL.\n','2017-07-21 10:46:15',1),(248,60,'### 接下来面试环节技术准备的三大方向\n\n#### 个人 OA 系统开发\n\n在抽象等方面要前所未有的放开手脚取做。使得项目配备完善的 debug 系统，系统日志功能，代码自动生成工具\n\nvue 的源码看核心的一部分，方式以阅读为主，少部分关键地方练习。\n\ncss 趁机学习和巩固。\n\n\n#### 计算机网络基础(这一块学习不够,接下来加强)\n\n补充计算机网络基础知识。\n\n#### 算法(环节的重中之重，算法的实现上优先用 python 完成，主要考虑便捷的文档测试和单元测试)\n\n在使用过程中，可以不拘泥于c 语言的复杂的内存管理等。c语言方面缺乏工程时间和应用的能力，手头也没有解决这方面问题的资源，形式以 letcode 刷题目和结合 JAVA 算法书记实践为主。\n\n终端的操作方式野比较熟悉了，无论 php,java, c 语言也都是哪些坑，之前已近踩过了。\n\n中途多和孙宇衡，王长富，杨海涛和周小旺交流。','2017-07-25 02:07:27',1),(256,55,'孙宇衡项目个人笔记无法换行','2017-08-01 15:20:53',1),(258,62,'// bool true on success or false on failure. 不能将settype()的结果直接赋值给变量','2017-08-03 02:24:46',1),(259,63,'[tcp 三次握手](https://www.nowcoder.com/questionTerminal/2d5a65326a4c43ffa87ca7bf5ad1a632)','2017-08-03 11:55:53',1),(261,64,'```python\n\'\'\'\n>>> 1 << 0\n1\n>>> 1 << 1\n2\n>>> 1 << 2\n4\n\'\'\'\nbitmask\n```\n[how to use bitmask](https://stackoverflow.com/questions/18591924/how-to-use-bitmask#)\n','2017-08-03 23:41:42',1),(263,58,'(apache 重写)[http://php999.blogspot.jp/2015/07/remove-indexphp-from-codeigniter.html]\n\n(apache 重写官网)[http://httpd.apache.org/docs/2.4/mod/mod_rewrite.html#logging]','2017-08-06 03:59:44',1),(264,58,'[无限极分类](http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/)\n[letcode](https://leetcode.com/problems/median-of-two-sorted-arrays/discuss/)\n[孙宇衡日志系统](http://60.205.189.102/back/official/index.jsp)\n[牛客网](https://www.nowcoder.com/sns/message/9310574/conversation-list?type=1)\n[廖雪峰python](https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/00143167793538255adf33371774853a0ef943280573f4d000)\n[inteligent IDE 插件开发](http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started.html)\n\nletcode https://leetcode.com/problems/reverse-integer/description/\n[!] Method is generated. Documentation taken from corresponding module.','2017-08-07 15:02:40',1),(266,58,'[分表分库](http://www.infoq.com/cn/articles/key-steps-and-likely-problems-of-split-table)\n[分布式事务解决方案](http://www.infoq.com/cn/articles/solution-of-distributed-system-transaction-consistency)\n[run an process in backend](https://kb.iu.edu/d/afnz)\n\n jobs linux 命令\n\n学习 `stty命令`\n\n\n### php 源代码学习放后\n\n下午决定在开发即上面安装php, 顺便学习了php 源码的目录结构及各部分的作用, 安装了 ctags (在一定程度上方便了php 源码跟踪), 学习了php基本数据结构中基本类型的实现方式.','2017-08-09 15:02:42',1),(267,58,'添加一个命令行工具, 通过 man markdown 查看markdown的作用个功能,方便编写','2017-08-09 15:05:55',1),(269,8,'安装 了 `babel`, 学习了 `es6` 代码的编译过程, 先从这点简单的事情开始做.\n\n配合 `v-if` 方法和 `vue directive unbind life hook` 解决了 `markdown` 性能问题。(这种方案存在问题,已经被 修改版的inserted 和 update 方法替换)\n\n阅读了一个写的不错的 `css` 布局教程: [不错的 css 布局教程](http://zh.learnlayout.com/about.html)\n\n学会了git 新建分支,合并分支,解决冲突,配置 meld 作为 git 默认的 merge tool.\n\n把之前**廖雪峰**的 git 教程再过一遍,结合教程将自己的 `c program/data structure` 部分上传到svn上\n再用 MySQL dump 工具将自己的表结构导出,长传到 `git` 上面,方便别人进行二次开发\n','2017-08-16 14:33:40',1),(270,58,'Query 类的测试案例需要加待 引号的字符串这种可能会破坏 sql 语句结构的东西.\n','2017-08-17 16:05:56',1),(272,8,'- [x] 4.3.7 标签  <<git版本控制管理>>,这本书已经看完,头种脚轻,怪怪的\n复习和巩固了 git 相关的命令,解决了自己将 mysql 数据上传到了GitHub上的问题.\n提醒了孙宇衡将表的这几上传到git上面\n阿里云抢免费资源\n修复了机械键盘空格键位置错误问题引起的按下后起不来问题,之前一直存在,没有从根本上解决这个问题','2017-08-18 14:15:17',1),(279,8,'架构学习:\n\n### 搭建负载均衡环境\n用源码的方式安装了 `nginx`,并写了配置过程的初稿.连续攻克的问题主要有:\n(1) 找到对应源码的下载方式\n(2) configure 文件在`auto`目录下,并不在根目录下,因此配置需要做适当调整.\n(3) 两个依赖 `zlib` , `pcre` 要到相应的管网上下载,不过不用安装,`ngix` makefile 会自动安装.需要注意的是二者的方式位置要和配置指令中声明的位置一致\n(4)运行make安装,\n(5)解决了同 `apache` 的端口冲突问题. 熟悉了 `nginx -c` 和 `nginx -s`.\n下午开始学习 `nginx` 的站点配置以及负载均衡的实现,复习了 `nginx`的指令和预定义变量,攻克的难点主要有:\n(1) `upsteam` 模块的位置与该在 `http` 指令里边,\n(2)验证了负载均衡是否实现\n\n### 用 redis 管理 session:\n(1)重新写了 `redis save hander`, 并运用到了项目中来了,通过 `redis-cli` 命令验证了session 设置完成\n\n### 主从配置\n\n(1) 搭建了mysql主从配置环境\n期间存在的主要困难是:发现问题是两台机器不同通过 bash 终端访问mysql,网上给的最多的是授权方案,尽管已经给了所有权限,但是仍然无法访问,原因为 `iptable` 禁止了 3306 端口的数据外出, 之前在本地访问是通过文件 `socket` 的形式,因此,之前没有遇到这个问题.解决方案参照 `http.md` 文件.\n\n### 服务器运维方向\n(1) 继续学习 `apache` 重写规则,结合 worldpress 的网站示例,练习. 学了了 `[QSA]` 的应用场景,这点个自己最初的理解略有偏差,在看了官方文档后,理解了\n\n[wordpress 的重写](https://codex.wordpress.org/htaccess)\n\n\n### 下一步计划做 `cdn`, \n\n实际使用中发现,如果一台服务器挂掉了,站点会变得比较慢,,如何避免这个问题? 如何保障服务器上的图片的安全性','2017-08-22 03:19:02',1),(284,43,'个人项目:\n在使用过程中,发现一处bug,原因为对 vue refs 不太了解,后来查了官方文档,也说明了不适合做绑定.\n后修正的方案为: 改为在 `textarea` 上双向绑定一个一个数据 `note.modifiedContent`, 在编辑的时候,另 `note.modifiedContent = note.content`,通过与textarea的双向数据绑定(绑定到`textarea`的 `value` 属性是不会去重新建立`DOM`的,所以不会造成性能问题),在保存的时候, 另 `note.modifiedContent = note.content`,这样保障需求的情况下,最大限度的提高性能','2017-08-22 13:51:37',1),(285,62,'```\nREMOTE_ADDR vs SERVER_ADDR vs HTTP_X_REAL_IP\n\'REQUEST_URI\' => string \'/first.php\' (length=10)\n\'SCRIPT_NAME\' => string \'/index.php\' (length=10)\n\'PATH_INFO\' => string \'/first.php\' (length=10)\n\n\'PATH_TRANSLATED\' => string \'redirect:/index.php/first.php\' (length=29)\n\'PHP_SELF\' => string \'/index.php/first.php\'\n```','2017-08-23 12:44:44',1),(289,8,'找工作:\n(1) 上午修改简历, 添加个人项目的内容和结果, 然后回应百度招聘,并投递简历\n(2) 先检查数据接口格式是否正确\n(3) 502 gateway error 错误,经过检查,发现根本没有访问日志,怀疑站点没起来, 然后去检查配置, 发现是今天新添加的一句话不对了. \n(4) 通过学习 java 中 ArrayList 的使用方法,为理解特定算法题目扫平障碍.\n\n其实人一生中大部分时间都是在充满曲折和迷茫的前进的,真正能够走到最后的人,一定是能以平常心对待这个漫长的过程,这样,当机会真正到来的时候,一个人的希望和抱负,才不会消耗殆尽.楚汉之争,国共之争,信心来源于对历史的吸收,以及对自我价值的肯定.源于对别人的包容和对自我以平常心态','2017-08-24 10:58:39',1),(291,43,'封装了`router`,`request`, `response`, `view` 这些类,初步告别了之前框架的简陋先发, \n主要取得的成绩有:\n(1) `MVC` 结构均已齐全,成为具有依赖注入的组件式现代框架.\n(2) 采取了与之前接触的所有框架均不同的路由方式,将 `controller` 与 `actions ` 放到同一级目录下, 解决了在其他框架中遇到的找文件繁琐的问题.\n(3) 进行了初步的测试,并对应用层代码进行了改造, 开展了初步测试,目前已基本通过,可能还会有部分小 `bug`.\n计划将开发工作告一段落,接下来全力应对找工作.\n\n笔记添加了完成了分页程序','2017-08-26 06:42:30',1),(293,58,'[es6](https://search.bilibili.com/all?keyword=es6&from_source=nav_search)\n[v-model 的经典用法](https://www.bilibili.com/video/av13450835/#page=8)\n[yii2 第26章以后](https://www.bilibili.com/video/av12594323/?from=search&seid=8630236478953479685)\n[普林斯顿大学算法,特别棒](https://www.bilibili.com/video/av9995456/?from=search&seid=3961234137020262068)\n[算法](https://www.bilibili.com/video/av11739347/?from=search&seid=3961234137020262068)\n[nginx 从源码理解nginx 的工作方式](http://tengine.taobao.org/book/chapter_02.html#id2)','2017-08-27 12:34:51',1),(295,58,'web前端:\nNimoChu(有多款开源产品,熟悉前端开源产品流程)\n\n计算机网络:\n车小胖网络主治大夫，专治疑难杂症\n\n','2017-08-30 15:37:01',1),(296,58,'(2) https 建站(https://coolshell.cn/articles/18094.html) todo\n\nwhat is ppa add-apt-repository\n\n证书协议许可:\nhttps://letsencrypt.org/documents/LE-SA-v1.1.1-August-1-2016.pdf\n\n域名购买:\n@todo 目前可以做的工作为: 搭建 lmmp 运行环境\nhttps->域名购买->登录阿里云->安装阿里云APP->安装软件的图层问题(手机软件安装图层问题需要手动关机然后手动重新启动来解决这个问题.)\n@todo https->域名购买->需要建立域名模板,并完成实名申请,这一步的进度为: 模板已经提交,等待审核,预计3`5个工作日内能完成实名审核工作.\n@todo http 认证卡在了没有相应的域名这一步上了,目前成果如下:\n\n> Your account credentials have been saved in your Certbot configuration directory at /etc/letsencrypt.\n\n@todo 目前的进入主要为:`sudo certbot --nginx`, 不够执行这一条命令的条件\n\n\n','2017-09-01 11:57:29',1),(297,8,'晚上回来,看到邮箱里边有一篇关于 https 的书籍,这正好是自己需要的.越是开始尝试看文档:\n(1) 需要通过 ssh 访问远程服务器,因此,通过阿里云的教程,学习和了解了 ssh 的协议应用场景和使用方法\n产生密钥\n`ssh_keygen`\n(2) https 建站(https://coolshell.cn/articles/18094.html) todo','2017-09-02 14:30:11',1),(301,8,'熟悉了项目中封装的http请求的方式.','2017-09-04 09:35:28',1),(304,46,'看过的书籍:\njavascript good parts\nJavaScript 权威指南\n\nphp 与 mysql web 编程\n深入 PHP 面向对象模式与实践\nPHP 核心技术与最佳实践\n\n算法第四版\n数据结构与算法c语言描述\n数据结构与算法python描述\n算法导论\n\n所接触的语言:\nc, java, python, shell, javascript, php\n\n写过的功能的主要亮点:\n登录(session,cookie,与之相关的基本安全问题)\n律师资料管理(文件上传)\n扫码入库(H5 语音元素)\n部分管理(递归树)\n个人项目中的亮点:\ndrag, drop \nauto height\n集成了 markdown 和 high light,并对性能做了优化.\n','2017-09-10 02:16:10',1),(306,59,'### PHP 开发过程中遇到过得错误\n\nopenapi 对接跨越开发过程中遇到的问题总结:\n(1) 修改变量后,为返回结果,到时其他方法调用的时候,依然使用老的数组   (这个问题先后触发了2个bug, 要特别注意)\n(2) php 直接相除不会自动转为整形,这个问题有出现过好几次了: 用 `intval($number / 100)` 解决\n(3) 对 orderCoding, cartype, vendorCode, customer_id 等信息,存在理解偏差,因此,问问小波怎样结合 pull request, 以便及早发现问题.\n(4) 临时加的 test.json 未考虑清楚, 最重要的因素为没有将接口内容吃透,导致连续多次合并代码. \n(5 跨越的接口写mock,然后开展进一步的测试,先过了跨越测试库提供的鉴定权限的方式,还是无法通过鉴权(名称空间所在的文件前不能有空白)\n注意, 对所有云鸟api检查返回值是否为0\n对所有涉及运力和派车单的接口进行检查, 千万不要将二者混淆了\n(6) 改代码之前,把之前的代码再看一遍,方便评估修改可能造成的关联问题.\n(7) //  字符串拼接的时候拆少了字符串本身的 \'.\', should use \'.errorMessage\'\n(8)联合测试之前,模拟别人的身份,自己按照接口文档构造数据,避免连测第一步就无法通过的尴尬局面\n(9) 注意度量的量格式和单位\n(10) substr 第一个参数为一个位置, 一般为 strpos 查找出来的位置, 为一个 (] 区间\n\njson_encode 不编码 unicode 字符\njson_encode($response, JSON_UNESCAPED_UNICODE)\n\n(11)\n// __DIR__ 不带尾部路径名称,以后避免这种坑\n        //\"/home/wwwroot/scripts/php/logStatistics/src/lib/table../public/html/log2017-10-24 16.html\"\n        self::$_outputFile = __DIR__ . \'/../public/html/log\' . date(\'Y-m-d H\') . \'.html\';\n\n(12) 检查 php 开始和结束位置的错误信息, 避免写作短标签\n\nPHP Parse error:  syntax error, unexpected \'}\', expecting end of file in /home/wwwroot/scripts/php/logStatistics/src/lib/table/template/stripTable.php on line 44\n\n(13)// w+ if does not have this file, create it\n        $file = fopen(self::$outputFile, \'w+\');\n\n(14)// 特别注意变量提示的时候的单复数\n        arsort($paths, SORT_NUMERIC);\n\n(15) 对参数类型也做一下检查,方式数组被传入,引发后续 bug','2017-09-18 02:30:57',1),(307,8,'查看了团队代码分支模型约定,了解了团队版本发布流程, git 协作规范等','2017-09-20 13:38:20',1),(308,8,'近期需要安装的软件:\noffice\nnavicat\n\n\n','2017-09-27 03:17:25',1),(309,8,'今天上午准备学习 laravel 框架的代码, 中间看到一个路由异常问题,涉及到 nginx 重写机制, 然后想在本地配置一个自己实践一番, 结果发现虚拟机无法联网, 然后学习了 pppoeconf 查看自动拨号上网的设置情况, 通过 lspci -中查看了设备的状态, Ethernet controller 部分显示正常,涉及到了 peripheral Compenent Interconnect , 查阅了英文文档, 了解了其在 cpu 和其他输入输出设备间起到的作用.\n快到中午的时候, 对虚拟机进行了回退,发现依然无法上网,因此还以 vmare 的某个服务可能存在异常, 关闭两台虚拟机,重新启动 windows后,问题解决.\n','2017-09-27 11:47:54',1),(310,58,'京东金条:10913.32,\n京东白条: 5842\n蚂蚁借呗: 10000,\n总计负债大约 26000\n\n对外借款: 共计约 20000\n童庆恒:10000\n舅舅: 1500 + 3000, 共 4500\n姬正勇: 4000 \n\n负债大约: 5000\n\n\n可预期的收入: 10,11,12,1, 可预期收入大约40000, 房租开销大约 10000, 生活开销大概5000, 去除15000元, 预估可剩余 25000, 计划还完大部分债务开销. 赶在今年年底实现收支平衡的计划基本可以实现.\n\n\n\n','2017-10-08 11:58:45',1),(311,58,'elk 功能跟踪:\n\n \n在 http://fluentbit.io/documentation/0.8/installation/ubuntu.html 网址,到 apt install td-agent-bit\n','2017-10-13 02:15:58',1),(313,58,'其中,关注开源产品 AMQP library for PHP, 这个库的文档比较少, 但是作为入门的文档还是够的, 只不过目前以熟悉业务为主, 这个东西会用暂时就可以后, 后续再做深入的研究\n','2017-10-13 13:16:50',1),(314,58,'专利: 查看比对文件','2017-10-13 15:01:58',1),(316,58,'在有限的时间内,将手头工作做好. 在有闲余时间的情况下, 围绕项目展开相关技术架构的学习. 先从宏观上理清楚思路,在挑选一些感兴趣的环节理解思路.\n\n没有氛围的技术,先不学','2017-10-15 09:50:59',1),(318,4,'整理了文件 work.md,\n查看了 dingding robot, 了解了其原理,查看了 dingding 开放平台robot部分文档示例\n用 php 写了脚本分析 openapi 模块的各个路由的分布情况, 上到测试环境上以后, 发现开发机上无法运行php环境.因此,改用一句 shell 脚本做日志分析\n\n中间遇到的难点是远程文件拷贝的本地机器, 最后,本地采用的账户和路径为: ffz@172.17.51.108:/tmp/ , 但是root用户的身份,经常提示密码错误, 原因尚不明确','2017-10-17 03:39:28',1),(319,8,'消息队列的基本概念了解\nrabbit mq 教程\nhttp://blog.csdn.net/column/details/rabbitmq.html','2017-10-18 09:13:03',1),(320,4,'业务学习总结:\n订单插入的大致流程:\n坐标系确定和转化, 位置落点(beeper_mt), 客户信息获取(base_data), 代收款业务查询(has_authority), 调用 id_service 从 redis 里边产生订单 id, 凑齐所需的信息后,插入 order_list 表格, 然后根据客户设置的回调地址,发送消息队列, 另外,需要插入 订单快照 order_snap,记录订单id,状态,操作人等一些信息\n\nopenapi 中, api/v1/g7/get 这个接口是我们调 g7 的接口,获取设备温度, 然后提供给司机端显示温度的服务\n\n参考文件\nbeeper_tms_waybill/app/Repositories/Itinerary/ItineraryApi.php 订单插入的具体逻辑','2017-10-19 02:34:56',1),(321,8,'总体思路:\n@TODO 待与运维商量日志获取的方案(目前的日志方案)\n\n大概分为三块内容: 分析环节(需要的数据, 数据结构设计, 表结构设计), 报表环境(html, markdown), 通知(dingding, email, wechat)\n\n分析环节:(需要的数据?)\n时间维度: 按小时划分, 假设日志可以按照小时切分\n大致方向为: 从 request log, error log, base log 中逐个逐行获取数据\nrequest log: pv 统计\neror log: \nbase log: 调用其他模块的各个接口的访问量\n通知功能:\n限流\n方案1:每次处理完成,读取配置文件,根据统计结果, 触发报警.\n\n方案2: 在 openAPI 代码用 redis 做限流, 单独出发报警.\n\n统计pv, 写完善的 pv 统计脚本,加到定时任务中, 并将结果存入数据库,一遍日后做相关统计工作','2017-10-19 03:40:38',1),(322,58,'1.jenkins 学习过程中遇到的问题\n\n2.了解公司发布器过程中,存在以下困难\n\n* 一些关键性的文档由于权限问题,无法查看 (可先申请查看 elk 这种非敏感信息中的文档)\n* 自己对照 官方文档, 摸索出一些构建的方式和脚本','2017-10-19 06:35:05',1),(323,58,'[ 全栈线路 ]\n响应式网页设计(学习了相应是网页设计的基本原则, 屏幕禁止缩放, 媒体查询), 另外学习了 css3 中striptable 的实现, 以及表格边界间隔距离设置和是否合并的功能的实现.','2017-10-21 03:20:24',1),(324,58,'思考一下目前遇到的几条纵线和各条纵线上遇到的问题:\n\n(1) 个人软实力提升.这一点不能因为其他任何事情耽误. 如发下问题, 放下其他一切事情,调整过来.\n(2) 全栈工程师路线, 着重提升自己在团队协作上, 软件设计方面的表达能力, 特别是在产品, UI, 前端交互这三个方面.\n(3) 个人项目发展规划: 可发展和动员的成员少, 难以运用他人的智慧\n(4) 团队内部的有意思的模块和有用的技术栈. \n(5) 加强算法功底路线: 还差 Java 没有学习了, 算法学习在其他四件事情中, 不定时穿插进行, 将有难度的事情分解开来.\n\n路线1 的总体思想如下:\n遇到头疼的事情是, 勇往直前. 并下意识培养自己这方面能力\n\n线路4 的具体内容如下:\n线路4: 团队有意思的模块: \n主要用到的东西包括: \nredis(目前发现的应用主要有:生成id, 限流), \nes(elk), \nrabbitMQ, \nmogodb,\nnodejs, \npython, \nshell, \napi doc\n\n弄清楚堡垒机中的日志的格式\n\n目前团队的主要产品:\n\n```\nbeeper_tms_openapi \nbeeper_platform_engine \nbeeper_customer_web 鸟眼系统\n还差一个 sass 系统\n```\n\nretrieval_service是ElasticSearch服务，一般用来做多源数据的join查询\n\n\n线路5基本内容:\njava基础, 进一步加强算法学习,刷题, 消除算法软肋. 展开计算机网络 , 服务器运维的知识的学习','2017-10-22 02:26:39',1),(325,58,'今天工作中遇到的问题:\n(1) 学习 elasity search 的过程中,表现的还是有点操之过急, 明天结合业务, 做一些查询的实例功能出来.\n(2) 不应该去折腾 windows power shell, 与 linux 实际上差异挺大挺大, 很多命令都用不了.\n\n后续抽时间完善php版本,写一个 demo 出来.\n在将其改写为 python 版本的(这一项工作依据实际情况看)\n\n切换到sdk的相关工作中, 分别完成 python 和 java 版本.','2017-10-23 15:47:23',1),(326,58,'阿里云: ssh root@60.205.214.153\n\n云服务部署方式:\n(1) 安装持续集成工具 jeckins, 对照廖雪峰的教程,下载了deb安装包, 目前存在一些以来问题, 具体如下:\n\n需要先安装下面三个软件:\n```\nUnpacking jenkins (2.73.2) ...\ndpkg: dependency problems prevent configuration of jenkins:\n jenkins depends on daemon; however:\n  Package daemon is not installed.\n jenkins depends on default-jre-headless (>= 2:1.8) | java8-runtime-headless; however:\n  Package default-jre-headless is not installed.\n  Package java8-runtime-headless is not installed.\n```\n\n找到 jenkins.war 安装包的位置,\n\n```\nfind / -name \"jenkins.war\" -type f\n\njava -jar /usr/share/jenkins/jenkins.war\n```\n\n\n安装完成后,提示初始化生成的用户和密码:\n\n```\n4d254b2ca1654375a8a24a47ed217f43\nThis may also be found at: /root/.jenkins/secrets/initialAdminPassword\n```\n\n\n\njenkins 的 pipeline 默认路径: `~/.jenkins/workspace/pipeline$`\n\n\n[jenkins 的官方文档需要继续看](https://jenkins.io/doc/book/pipeline/jenkinsfile/),\n\n\n今天获得的主要收获为:\n(1) 了解了 `jenkins` 的运行 shell 的方式\n(2) 了解了 jenkins 部署时间的设置问题, 因为默认的时间很容易不够用而导致超时反复刷新的问题\n\n@todo 了解jenkins 默认的身份, 用户名是那个?','2017-10-24 00:34:10',1),(327,8,'一枝红杏: yizhihongxing.hk\n给侄子外甥女挑选了一些玩具\npushed scripts','2017-10-27 14:44:00',1),(328,58,'想法碎片:\n让视频像书籍一样','2017-10-28 16:49:09',1),(329,8,'* 看了 sdk 的主体内容\n* 测试了大点的限流操作\n* 在 wiky 上了解了 debian 的一些主要的分支','2017-10-30 06:26:10',1),(330,58,'文档笔记模型:\n在内容上只显示成今天完成的工作,当需要显示详情的时候,才将所有的历史过程都显示出来,并且重点标记当前的位置.如果只以# 开头,表明为司机标题,且默认标题为当前时间.用一张表记录 task 和 step 的对应关系,做相应的删除操作.\ndirectory 用于分类 本身为一级标题\ndirectory 下面可以有两级目录.分别占据二级和三级的位置\n\ntask 用于管理任务 task 本身为任务的一部分, task 本身为4级标题\nstep 是完成任务的一小步 step 本身为5级标题\nstep 下最多设置一级目录, 每个 step 前面转化一个 checkbox 出来,\n在checkbox 中,能够支持 `@someone` 格式.当 @someone时候, 通讯录也要有一条对应记录\n\n添加一个环境变量表征用户目前的登录身份,是root还是其他\n\n有一些周期性的重复性质的任务需要按照周期规则定时生成,如果在 todo 目录下,则需要定时生成.\ntodo list 可以分为两大类: 周期性重复, 间歇性, 一次性三种类型\n\n进程有一件事情从逻辑上应该属于某个具体事项, 但是需要通过 todo 去管理和完善. 想一想如何实现这个功能.这里主要考虑两种思路,\n采用模拟转链接的形式和文件属性的方式, 如 具有 excute 权限的任务,需要关心是否执行过. 比如需要某人做什么事情,则此人拥有可行性权限,需要某人审批一样东西, 则此人拥有刻度权限 需要某人加以修改, 则此人拥有可写权限\n\n设计最小到step这个基本的内容的可见性 (类似 linux 的文件的可见和隐藏)\n\n另外提供一个缓存箱子的功能\n\n需要提供某一功能的历史轨迹功能\n\n需要提供某一个功能的备份功能\n\n以上都是基本需求,具体怎么设计数据库的表格以及代码的整体设计方案','2017-11-04 01:32:08',1),(331,58,'@todo 收集权限认证方面的需求','2017-11-10 02:32:10',1),(336,8,'* [ok]配置虚拟主机ip和端口号码, 供局域网访问\n* 搭建基础代码, 保证可访问, 加载 smarty\n* 编写前端页面, 用于生成可配置的json\n\n脚本文件名称为 array.php','2017-11-13 01:55:31',1),(337,43,'### 上午服务器 ip 访问配置问题\n#### 定位过程:\n\n* 发现路由不管用,改写路由依然无效,\n* 尝试发送 XDEBUG_SESSION=PHPSTORM 进行单步跟踪, 发现没有到router.php 文件中,进一步跟踪到 router 类, 发现依然没有进入该类, 进一步在入口位置打断点,发现依然未进入, 从而确定这一块代码压根没有走\n* 尝试 inotifywait 监听目录文件变化, 确定 log 写入那个文件,但是由于 `/home/wwwroot/` 下面的文件实在太多, 超过 inotifywait 的监听的目录的上限, 因此放弃执行该目录,采用文件夹逐个替换的方式定位具体走了哪一个项目的代码\n* 首先将 `beeper_tms_openapi` 项目重名称为 `a`,然后发现网站无法访问了, 因此确定是走了 `openapi` 这一层逻辑\n* 由此想到自己的 `lnmpa` 的配置规则, 明白 `nginx` 转发的所有的请求都会转向 88 端口, 但是 `beeper_tms_openapi` 和 `beeper_develper_platform` 的规则都会被匹配上,而 `beeper_tms_openapi` 的规则被匹配上后, 直接走了 `beeper_tms_openapi`;\n\n#### 解决过程:\n临时方案:将 `apache` 配置文件下的关于 `beeper_tms_openapi`这个项目的配置删除','2017-11-13 05:24:15',1),(338,8,'#### laravel 框架使用中遇到的问题\n路由 test 无法进入 app\\Http\\Controllers\\TestController\\test 方法的原因:\n* TestController 无法进入, 查看原因,发现其所继承的 Controller 不存在, 而框架没有报错也没有记录log, 还以是自己重写了 php error log 导致的, 找到配置文件,关闭 error log 解决','2017-11-13 12:18:52',1),(340,8,'方案无法重现\n\n修改ip地址并且在不重启电脑的情况下通过 ifconfig 能够查看到最新的配置的方法:\n问题描述: 修改网卡 eth0 的配置后, 通过 `/etc/init.d/networking restart` 重启后,ip 确实生效了. 但是通过命令 `ifconfig -a` 中查看到的命令却没有变.\n最终解决方案:用 `dhclient -r` 关闭一张网卡(针对动态ip的网卡), 然后通过 `/etc/init.d/networking restart` 重启所有网卡,\n通过 `ifconfig -a` 发现 IP 地址已经变换过来了\n\n尝试过的方案:\n`sudo service dns-clean restart`, 结果失败,**待弄清该命令的含义和作用**\n`rndc restart` 结果提示未安装, **待弄清该命令的含义和作用**\n`ifdown eth0`&& `ifup eth0` 根据描述,其事项的功能为 `/etc/init.d/networking restart` 的部分功能\n`service network-manager force-reload`  **弄清楚network manager**起什么作用\n\n\n学到的知识:\n查看某一服务的状态  `systemctl status dns-clean.service`\n\n\n','2017-11-14 00:36:12',1),(341,8,'* 文档线上化项目为完成 (低估熟悉框架的成本,其他事情搁置)\n* 阿里云服务器配置(因未能成功登录云服务器,尝试修改ip地址, 并让其在不关机的情况下启用和可查询,前后耗费90min, 需要进一步熟悉网络管理的相关内容)\n\n','2017-11-14 00:42:26',1),(342,8,'今天的主要工作:\n* 在杨国奇的帮助下, 确定了openapi 文档线上化的实现方案, 放弃了对apidoc的兼容, 和前端何绪杰沟通了接口的要求.( 4h 左右)\n* 重点跟踪了一个取消订单的接口的代码,目标是一直跟踪到结果的保存, 报清楚中间调用的所有流程, 并做相应的笔记. 从今天一个接口的十点工作来看, 工作量有些大.\n* 晚上开会讨论 文档线上话的整体规划,需要准备的材料.前后耗费 2 h','2017-11-14 14:01:53',1),(343,4,'beeper_develper_platform项目mysql配置：\ntvmops:\nhost: beeper_develper_platform.write.3306.mysql.test103.yn.cn\nport:3306\ndb: beeper_develper_platform\nuser: bp_devel_plat_w\npassword:yunniao.me_bp_devel_plat_w_passwd\n\nproduction:\nhost: 192.168.1.161\nport:3318\ndb: beeper_develper_platform\nuser: bp_devel_plat_w\npassword:37f41569b43caafa52ccb98b8cecfe4b\n\n','2017-11-15 06:13:32',1),(344,4,'订单取消的逻辑:\n处于捡货状态的订单后,不允许取消.(部分客户定制的 配货中可以取消, 完成后拒收也可以取消)\n更新订单 status 后, 根据 beeper2.pod_customer 的客户待收款情况,调整订单的代收款字段.\n\n','2017-11-15 06:13:38',1),(345,8,'今天取得的主要进展为:\n(1) 修复了虚拟机版本升级造成虚拟机实例运行的几个问题.\n(2) 整合了个人项目,集成了最新特性,后端不要实现读写分离,前端目标为实现分页(有bug),目前已经基本完成.\n(3) 将个人的 `lnmpa` 架构改造成了 `lnma + lamp` 混合结构, 作为全面向 `lnmp` 过度的一种方案\n(4) 整理了 `easy note` 产品二期整体规划, 待进一步细化为可执行的步骤,必要的情况下分开测试.\n\n目前还存在不少问题, \n比如 show more 这个方法不见了','2017-11-19 08:25:06',1),(346,8,'用户可插入广告位的博客管理系统.','2017-11-19 10:15:17',1),(347,8,'linux 查看某个目录磁盘占用情况\n\n```\ndu -sh  /var/cache/\n\n```','2017-11-19 13:38:34',1),(348,4,'订单更新:\n* order_list 中字段 cargo_price 是指代收金额\n* 订单状态处于揽收状态,不能改变状态(因为这是最早的状态了), 如果处于排线状态, 要确保排线关系的订单体积,重量等信息不变, 如果信息变更, 则需要解决订单和集合关系(order_group_relation), 移除集合中的这些订单,并将集合检查相应的数量,如果集合为空, 则删除集合\n* 如果 from=openapi, 用 id 查订单, 如果不是, 用 origin_id + cuid 查订单, `origin_id` 在存在 `source` 的情况下是可以更新的.\n* 根据仓名称获取仓ID(调用base data 的接口), 让仓落地. 有ID 根据ID 查名称.(如果不是共配的客户,仓ID是不可以修改的)\n* 坐标系: 如果不传递坐标系, 给默认类型 \n* 根据需要跟新tag list ,包括is_up 是否送货上楼, 是否已经录入\n* md5 是订单send字段信息结合起来计算而来, 检查订单的明细信息是否插入过(发货人名称, 发货人手机号, 发货人地址和公司名称), 如果之前没有插入订单明细信息,则在跟新的时候插入接口, 对应表为 `order_send_info`\n\n* 如果传递了 cuid 的话, 允许更新订单对应的 `cuid`\n* 如果需要更新订单的 id 的话, 也需要删除 `order_group_relation` 这张中间表的信息.并且将 `order_group` 这张表的每个集合的数量减少相应的数量. 同事, 检查涉及到的所有集合, 如果有订单数量为0的集合,删除掉该集合\n\n不可修改的信息:\n* 订单的状态\n* 订单的开始配送时间和结束配送时间必须是一天, 如果 from 字段不是共配的话, 订单配送日期是不允许修改的. 宫培修改了订单配送时间, 然后 修改添加 oorder_snap 记录\n* 已经完成的订单(签收,完成,取消,拒收等状态), 不允许跟新订单信息','2017-11-20 10:35:01',1),(349,4,'弄清楚订单更新的具体逻辑,接口包含的主要内容.\n进一步熟悉跨越的接口文档, 整理需要弄清楚和讨论的相关事宜','2017-11-20 12:36:10',1),(350,8,'\ngrep \'http://192.168.0.99:10799/waybill/v1/order/insert\' base/base.20171113.log | grep -oP \'source_name=(.*?&)\' | awk -F\'=\' \'{print $2}\' | awk -F\'&\' \'{print $1}\' | sort | uniq\n\n```\nalias allip=\'ifconfig -a | perl -nle\'\\\'\'/(\\d+\\.\\d+\\.\\d+\\.\\d+)/ && print \'\\\'\'\'\nalias cmount=\'mount | column -t\'\nalias cputop10=\'ps auxw|head -1;ps auxw|sort -rn -k3|head -10\'\nalias dush=\'du -hsx * | sort -rh | head -10\'\nalias getip=\'curl ip.cn\'\nalias grep=\'grep --color=auto\'\nalias jiangsi=\'ps -A -o stat,ppid,pid,cmd | grep -e \'\\\'\'^[Zz]\'\\\'\'\'\nalias killjiangsi=\'ps -A -o stat,ppid,pid,cmd | grep -e \'\\\'\'^[Zz]\'\\\'\' | awk \'\\\'\'{print }\'\\\'\' | xargs kill -9\'\nalias l.=\'ls -d .* --color=auto\'\nalias ll=\'ls -l --color=auto\'\nalias lport=\'lport() { lsof -i:\"$1\"; };lport\'\nalias ls=\'ls --color=auto\'\nalias meminfo=\'free -m -l -t\'\nalias memtop10=\'ps auxw|head -1;ps auxw|sort -rn -k4|head -10 \'\nalias osage=\'tune2fs -l /dev/mapper/vg_yn_vm-LogVol01 | grep -i created\'\nalias rm=\'/bin/rmtrash.sh\'\nalias system=\'dstat -ta --top-bio\'\nalias tailf=\'tailf() { tail -f \"$1\"; };tailf\'\nalias tailff=\'tail -f  | ts \'\\\'\'%H:%M:%.S\'\\\'\' \'\nalias vi=\'vim\'\nalias which=\'alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde\'\n```\n\n\n检查是否是硬链接\nls -hli /usr/local/lib/libpng16.so.16.34.0   /usr/local/lib/libpng16.so\n\n[igbinary](https://github.com/phadej/igbinary)\n\n查看 cenos 版本\ncat /etc/centos-release','2017-11-21 09:01:13',1),(352,8,'SELINUX=disabled\n\nhttp://www.revsys.com/writings/quicktips/turn-off-selinux.html\n\nhttps://www.liquidweb.com/kb/how-to-stop-and-disable-firewalld-on-centos-7/\n\n\nsudo iptables -A INPUT -i lo -j ACCEPT\nsudo iptables -A OUTPUT -o lo -j ACCEPT','2017-11-21 14:32:21',1),(353,4,'主司机,临时司机,签约司机的不同, 与云鸟任务模型的对应关系\n厢式货车有证无证\n\n订单回调的方案:\n老消息队列通过rebitMQ 在 waybill 发送,在 beeper_tms_messager 项目进行消费.在这里边找到了队列消费者的发布的规则, /var/www/deploy/beeper_tms_messenger/current/app/Libs/PusherLib.php,\n接下来进一步摸清回调的各种机制\n\n\n扫首页手机二维码无法下载\n\n','2017-11-23 06:07:18',1),(354,8,'\n```\nnpm install webpackage\nnpm install \nnpm run build:debug\n```\n\n\ngit config core.fileMode false\nhttps://stackoverflow.com/questions/1580596/how-do-i-make-git-ignore-file-mode-chmod-changes\n\n\ngit checkout @{-1}\n\ngit 操作:\n先拉分支, 再操作.完成后再删除分支\n\n\n// 软连接建立后,不要进行拷贝了,因为位置为相对位置\n\n/usr/local/nginx/sbin/nginx -c /etc/nginx/nginx.conf  -s stop\n\n```\nrpm -qf\nrpm -qi\n\n```\n\npostman open console\nctrl + alt + c','2017-11-23 09:24:46',1),(355,8,'\n查看一个路径的用户权限\n```\nnamei -om /home/ffz\nf: /home/ffz\n drwxr-xr-x root root /\n drwxr-xr-x root root home\n drwxrwxrwx ffz  ffz  ffz\nroot@:/home/ffz$man namei\n\n```\n\nnginx 使用注意的pitfall:\n\nhttps://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/#root-inside-location-block\n\n这个问题可能的原因:\n\nhttps://serverfault.com/questions/517190/nginx-1-fastcgi-sent-in-stderr-primary-script-unknown','2017-11-26 08:12:38',1),(356,8,'\n```\n# return 200 $uri; http://localhost:8588       /                                                                                          \n# return 200 $uri; http://localhost:8588/test /test\n\nhttp://localhost:8588/test.py.hello/php.php/test  /test.py.hello/php.php\n```\n$document_root:/var/www/deploy/beeper_develper_platform/current/public/index.php\n$fastcgi_script_name: /test.py.hello/php.php\n/var/www/deploy/beeper_develper_platform/current/public/index.php/test.py.hello/php.php\n#return 200 $document_root$fastcgi_script_name; \n return 200 $fastcgi_script_name; \nreturn 200 $document_root$fastcgi_script_name;\n\n\n```\ntelnet -tulnp\nt tcp \nu udp \nl listen\np program\nn port \n```\n\n```\n tar -cvf /home/www/images.tar /home/www/images ← 仅打包，不压缩\n tar -zcvf /home/www/images.tar.gz /home/www/images ← 打包后，以gzip压缩\n```\n\n参考:\n\nhttp://blog.csdn.net/zhenwenxian/article/details/4400404\n\nls -alhF index\n\n','2017-11-26 09:03:41',1),(357,8,'显示工作区根目录:\ngit rev-parse --show-toplevel \n\n所在目录相对于工作区根目录的相对目录\n\ngit rev-parse --show-prefix\n\ngit 解决中文文件名乱码问题\n\nIf you want to allow non-ASCII filenames set this variable to true.\n\nallownonascii=$(git config --bool hooks.allownonascii) \n\n\n\n### git diff 命令\n\ngit diff 比较的是工作区和暂存区的差别\n\ngit diff --cached 比较的是暂存区和版本库的差别\n\n\n\n```\ngit diff HEAD\ndiff --git a/tests/ExampleTest.php b/tests/ExampleTest.php\nindex 7e81d37..6068891 100644\n--- a/tests/ExampleTest.php\n+++ b/tests/ExampleTest.php\n@@ -13,6 +13,7 @@ class ExampleTest extends TestCase\n      */\n     public function testBasicExample()\n     {\n+        // example\n         $this->visit(\'/\')\n              ->see(\'Laravel 5\');\n     }\n\n```\n\n\n\\+ 的内容表示工作去相比版本库增加的内容.\n\n\n参考:\n\nhttps://www.cnblogs.com/lilongsheng1125/p/4978479.html','2017-11-26 16:25:41',1),(361,8,'非常重要\n\nroot@:/var/www/deploy/beeper_tms_openapi/current(BEEPER-44057)$nc -zv 127.0.0.1 9001\nConnection to 127.0.0.1 9001 port [tcp/*] succeeded!','2017-12-01 17:14:12',1),(364,8,'fiddler, linux 版本安装方法\nhttps://askubuntu.com/questions/922377/how-to-install-fiddler-on-ubuntu','2017-12-03 05:25:51',1),(365,8,'linux PATH 变量在 /etc/environment 目录下存放\n\nDLNA 协议\n\nhttps://wenku.baidu.com/view/12eeb78d6529647d272852e9.html\n\nformat json string\nhttps://www.daveperrett.com/articles/2008/03/11/format-json-with-php/','2017-12-03 06:31:11',1),(366,8,'没有深入场景, 了解的业务是浅的, 对行业的动态性文章缺乏了解. 要借助切换到鸟眼系统的机会, 多拜访客户, 和客户交流, ok, 性格的转变是 2017-2018年的最重要的事情.\n\n(1) 培养兴趣爱好.能立刻行动的就是跑步. 那么以往那些情况限制使得自己的跑步计划没有坚持下来呢? \n我总结了下面一些方面.由于我有慢性咽炎, 因此,我跑一会不就会嗓子非常难受.\n(2) 觉得衣服换洗特别麻烦.\n(3) 对跑步的价值没有长远的认识.\n\n关于跑步的几个误区. 为节省的跑步没有意义. 没有计划的跑步没有意义.\n清洗衣物,哪怕造成洗.一定要保证这个周期是可以运转起来的. 一定要想, 既然我会遇到这个问题,那别人也会遇到这个问题, 为什么别人没有还以过他们自己.并且我也没有怀疑过他们\n\n早起是以毒攻毒,是我唯一能够办得到成就. 记住之前的住的远的感觉,充分利用现在静距离的好处.\n\n','2017-12-05 15:18:57',1),(367,8,'[How do ${0##*/} and ${0%/*} work?](https://unix.stackexchange.com/questions/22387/how-do-0-and-0-work)','2017-12-08 03:21:22',1),(368,8,'java 错误提示码:\n\nnon-static method getParent() cannot be referenced from a static context\n\n新建文件的默认模式为 644\n\ndu  | awk \'{split($1,a,\"[^0-9]\");print a[1], $2;}\' | uniq | sort -nr | head -n 20\n\n\n/etc 为需要打包的目录\n```\n[root@linux ~]# tar -cvf /tmp/etc.tar /etc  <==仅打包，不压缩！\n\n[root@linux ~]# tar -czvf /tmp/etc.tar.gz /etc  <==打包后，以 gzip 压缩\n\n[root@linux ~]# tar -cjvf /tmp/etc.tar.bz2 /etc  <==打包后，以 bzip2 压缩\n```\n','2017-12-11 13:17:55',1),(369,8,'```java\npublic JSONObject signKye(JSONObject params) {\n        String accessToken;\n        String organizationCode = params.getString(\"kye\");\n        String accesskey = params.getString(\"accesskey\");\n        params.remove(\"kye\");\n        params.remove(\"accesskey\");\n\n        // 拼接字符串\n        ArrayList<String> paramsList = new ArrayList<>();\n        LinkedHashMap<String, String> jsonMap = JSON.parseObject(params.toString(),\n                new TypeReference<LinkedHashMap<String, String>>() {});\n        for (Map.Entry<String, String> entry : jsonMap.entrySet()) {\n            if (entry.getValue()!= null && entry.getValue().length() > 0) {\n                paramsList.add(entry.getKey() + entry.getValue());\n            }\n        }\n        Collections.sort(paramsList);\n        StringBuilder signString = new StringBuilder();\n        for (String str : paramsList) {\n            signString.append(str);\n        }\n        Common common = new Common();\n        accessToken = common.GetMD5(accesskey + signString.toString()).toUpperCase();\n\n        System.out.println(\"accessToken\" + accessToken);\n        JSONObject returns = new JSONObject();\n        returns.put(\"params\", params);\n        JSONObject publicParams = new JSONObject();\n        String timestamp = Common.timeStamp();\n        publicParams.put(\"Timestamp\", timestamp);\n        publicParams.put(\"kye\", organizationCode);\n        publicParams.put(\"access-token\", accessToken);\n        returns.put(\"public\", publicParams);\n\n        return returns;\n    }\n```','2017-12-14 02:21:31',1),(370,8,'shell 脚本\n\n$0 所运行的脚本','2017-12-14 03:33:05',1),(371,8,'java 引入jar包\n\njavac -cp /home/ffz/Desktop/jsoup-1.8.1.jar  Test.java \n\njava -cp ./:/home/ffz/Desktop/jsoup-1.8.1.jar  Test','2017-12-14 03:35:34',1),(372,59,'以完成的工作:\n* 考勤\n* 转正\n* 公司中英文名称\n* 壹米滴答(完成了更新后的签名方式的相应脚本, 为了将代码写的可测试, 花费了一定的时间, 但整体进展顺利)\n\n未执行:\n* 跨越重新下单走流程(没大问题, 交由测试完成了)','2017-12-19 01:12:15',1);
/*!40000 ALTER TABLE `notes` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` char(255) NOT NULL,
  `password` varchar(32) NOT NULL,
  `user_type` varchar(20) NOT NULL COMMENT '1,member;2,admin',
  `ts_created` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `ts_last_login` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (1,'909312359@qq.com','nxn2382502','1','2016-06-27 01:36:04','2016-06-27 01:36:04');
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-12-26 21:39:56
