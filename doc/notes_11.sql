-- MySQL dump 10.13  Distrib 5.5.48, for Linux (x86_64)
--
-- Host: localhost    Database: notes
-- ------------------------------------------------------
-- Server version	5.5.48-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `friend_profile`
--

DROP TABLE IF EXISTS `friend_profile`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `friend_profile` (
  `id` bigint(20) unsigned NOT NULL,
  `note_id` bigint(20) unsigned NOT NULL,
  `note` text NOT NULL,
  `ct_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `status` tinyint(1) DEFAULT '1',
  KEY `friend_profile_ibfk_1` (`id`),
  CONSTRAINT `friend_profile_ibfk_1` FOREIGN KEY (`id`) REFERENCES `friends` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `friend_profile`
--

LOCK TABLES `friend_profile` WRITE;
/*!40000 ALTER TABLE `friend_profile` DISABLE KEYS */;
INSERT INTO `friend_profile` VALUES (20,35,'陈诗雯，中石油勘探院','2016-06-15 07:12:51',1),(20,36,'李寿军，西南油气田','2016-06-15 07:13:19',1),(20,37,'童庆恒，天津燃气，南开区','2016-06-15 07:13:46',1),(20,38,'梁星源  非常规院周（福建？）老师 ','2016-06-15 07:14:36',1),(34,70,'该项目可加入分页功能、表单验证功能、用户登录模块、数据导入导出功能等。\n','2016-06-16 11:08:21',1),(34,88,'对前端代码进行了整体升级和调整（jquery.on()方法，该方法能延迟绑定','2016-06-18 03:49:26',1),(20,89,'李锐 中国再保险','2016-06-19 00:39:24',1),(20,90,'李阳 大庆','2016-06-19 00:39:56',1),(20,97,'许洪龙，得克萨斯州','2016-06-19 02:13:14',1),(34,98,'初步完成了分页功能，原理为每次重新发起请求。设置repage参数确定是否需要重新构建分页对象\n2016年7月6日：由于getdetail方法参数太多，采用对象参数方式。','2016-06-19 03:04:08',1),(34,99,'在当前事项下增加note，自动更新note列表。\n2016年7月6日：后改判断方法为增加note的modal的modal-title类下有一个存有当前新增note所属的friendid，与public.presentfriend.id比较或与basicinformation区域隐藏的friendid比较。','2016-06-19 03:19:02',1),(34,100,'后端的表单验证功能已基本添加','2016-06-19 03:19:56',1),(34,127,'添加了回收站功能','2016-06-19 11:22:58',1),(34,128,'测试大于一页是，分页能够正确显示','2016-06-19 11:23:29',1),(20,242,'勤恳，中石化西北局','2016-06-29 09:49:12',1),(34,271,'bug：\nproblem：在index界面删除一条记录后，实际为将其status属性改为false，在recycle页面加载时，需要显示所有的界面。\n当recycle界面初次加载时，显示是正确的。当单击分页按钮时，public.total减少1，之后在单击，无变化。\nplan：原因为当单击分页按钮的时候，分页按钮触发的请求地址为getafriendallnotes，而不是getadeletedfriendallnotes。\n2016年7月7日：后改为本页内为空时，加载新页面。','2016-07-03 15:39:23',1),(34,307,'bug描述：note列表区下拉框，默认选中的元素不正确,\n解决方案：原因为多个option被赋予selecte属性\n经验总结：\n2016年7月6日：\n  之前采用将$()对象作为note对应位置的html()参数，实践中尽管dom结构正确，但是，&lt;select&gt;默认选中的&lt;option&gt;却不不正确，且找不到问题规律。\n  因此，采用在public.select中存放数据对象，每次获取notes后，生成字符串，被作为给note对应区域的html()参数。\n  一种思路是不行，赶紧换另一种。','2016-07-05 07:30:45',0),(34,308,'增加了改变笔记所属好友功能','2016-07-05 08:45:38',1),(34,309,'bug描述：note列表区下拉框，默认选中的元素不正确,\n解决方案：原因为多个option被赋予selecte属性\n经验总结：\n2016年7月6日：\n  之前采用将$()对象作为note对应位置的html()参数，实践中尽管dom结构正确，但是，&lt;select&gt;默认选中的&lt;option&gt;却不不正确，且找不到问题规律。\n  因此，采用在public.select中存放数据对象，每次获取notes后，生成字符串，被作为给note对应区域的html()参数。\n  一种思路是不行，赶紧换另一种。 ','2016-07-05 08:46:40',1),(34,346,'将urls对象写成不可更改的常量，以提高程序稳定性','2016-07-06 10:13:38',0),(34,347,'整个系统用了两个全局变量\n','2016-07-06 10:14:17',1),(34,348,'bug描述：在index页面删除了一个事项后，对应的分页按钮组未清理。\n解决方法：\n//移除分页\nif($(&quot;#page&quot;).pagination()){\n$(&quot;#page&quot;).pagination(\'destroy\');\n}','2016-07-06 12:30:12',1),(34,349,'经验和知识点总结：\n（1）善于将具体问题切割成碎片，去提问。\n（2）勤问。\n（3）一种思路走不通，果断切换思路。\n（4）多看手册，多动手，多模仿。\n\n','2016-07-06 12:51:50',1),(34,351,'bug描述：新增加事项后，原事项的分页为清理。从有分页项目到无分页项目，分页残留。\n解决方案：每次切换事项开始，销毁分页，根据请款再建。','2016-07-07 01:18:11',1),(34,352,'添加了验证前端所有textarea内容不能为空的功能，并测试通过','2016-07-07 03:36:42',1);
/*!40000 ALTER TABLE `friend_profile` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `friends`
--

DROP TABLE IF EXISTS `friends`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `friends` (
  `id` bigint(20) unsigned NOT NULL,
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '1' COMMENT '用户id',
  `name` char(12) NOT NULL,
  `basic_information` text NOT NULL COMMENT '基本信息',
  `ct_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `latest_time` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '发表最新动态的时间',
  `status` tinyint(1) NOT NULL DEFAULT '1',
  `class` tinyint(4) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  KEY `ct_time` (`ct_time`),
  KEY `latest_time` (`latest_time`),
  CONSTRAINT `friends_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='记录头表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `friends`
--

LOCK TABLES `friends` WRITE;
/*!40000 ALTER TABLE `friends` DISABLE KEYS */;
INSERT INTO `friends` VALUES (1,1,'南小宁','日报-prepare','2017-04-09 05:53:54','2017-04-13 11:15:27',1,1),(2,1,'李军','技术大牛','2017-04-15 15:00:20','2017-04-15 15:00:20',1,1),(20,1,'就业去向','日常基本社交信息','2016-06-14 16:25:32','2016-06-29 09:49:11',0,1),(34,1,'个人系统升级','接下来需要做的工作：\n（1）将urls对象写成不可更改的常量，以提高程序稳定性\n（2）差用户登录模块\n（3）数据导入导出功能\n','2016-07-05 07:31:49','2016-07-12 07:40:21',0,1);
/*!40000 ALTER TABLE `friends` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `items`
--

DROP TABLE IF EXISTS `items`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `items` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',
  `fid` int(10) unsigned NOT NULL COMMENT '父节点id',
  `depth` tinyint(3) unsigned NOT NULL COMMENT '分类树的深度',
  `t_left` int(10) NOT NULL COMMENT '分类树左子树号',
  `t_right` int(10) NOT NULL COMMENT '分类树右子树号',
  `user_id` int(11) unsigned NOT NULL DEFAULT '1' COMMENT '用户id',
  `name` char(20) NOT NULL,
  `rank` int(11) unsigned NOT NULL COMMENT '排序号(从应用程序实现默认相邻间隔10)',
  `c_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `u_time` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '更新时间,需要在修改basic_info后,或者更新了与之对应的note后,更新该字段',
  `status` enum('draft','enable') NOT NULL DEFAULT 'enable' COMMENT 'draft 回收暂放, enable 启用',
  PRIMARY KEY (`id`),
  KEY `c_time` (`c_time`),
  KEY `u_time` (`u_time`),
  KEY `rank` (`rank`)
) ENGINE=InnoDB AUTO_INCREMENT=65 DEFAULT CHARSET=utf8 COMMENT='items';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `items`
--

LOCK TABLES `items` WRITE;
/*!40000 ALTER TABLE `items` DISABLE KEYS */;
INSERT INTO `items` VALUES (1,2,2,2,3,1,'note_requirement',535,'2017-05-01 02:40:03','2017-05-01 02:40:03','enable'),(2,0,1,1,132,1,'智能速记系统开发',20,'2017-05-01 04:57:52','2017-05-01 04:57:52','enable'),(3,0,1,1,2,1,'supplier',30,'2017-05-04 05:33:10','2017-05-04 05:33:10','enable'),(4,0,1,1,2,1,'http请求',19,'2017-05-04 11:02:38','2017-05-04 11:02:38','enable'),(5,0,1,1,2,1,'current',29,'2017-05-05 12:37:20','2017-05-05 12:37:20','enable'),(6,0,0,0,0,1,'test',0,'2017-05-07 13:42:28','2017-05-07 13:42:28','enable'),(8,2,2,4,5,1,'complete',77,'2017-05-07 14:44:03','2017-05-07 14:44:03','enable'),(35,46,2,32,33,1,'李晓东',398,'2017-05-07 16:02:42','2017-05-07 16:02:42','enable'),(36,46,2,34,35,1,'宋平平',396,'2017-05-07 16:03:24','2017-05-07 16:03:24','enable'),(37,46,2,1,37,1,'李军',399,'2017-05-07 16:03:40','2017-05-07 16:03:40','enable'),(38,46,2,38,39,1,'徐波',399,'2017-05-07 16:03:49','2017-05-07 16:03:49','enable'),(39,46,2,40,41,1,'唐驰',394,'2017-05-07 16:06:24','2017-05-07 16:06:24','enable'),(40,46,2,42,43,1,'孙宇衡',399,'2017-05-07 16:09:12','2017-05-07 16:09:12','enable'),(41,46,2,44,45,1,'陈家俊',395,'2017-05-07 16:17:07','2017-05-07 16:17:07','enable'),(42,46,2,46,47,1,'付毅',377,'2017-05-07 16:17:42','2017-05-07 16:17:42','enable'),(43,46,2,48,49,1,'南小宁',400,'2017-05-07 16:18:40','2017-05-07 16:18:40','enable'),(44,46,2,50,51,1,'王纲要',376,'2017-05-07 16:18:50','2017-05-07 16:18:50','enable'),(46,0,1,1,2,1,'日志',440,'2017-05-07 16:55:13','2017-05-07 16:55:13','enable'),(55,2,2,20,21,1,'bug',78,'2017-05-07 17:21:22','2017-05-07 17:21:22','enable'),(56,2,2,22,23,1,'test',550,'2017-05-08 03:29:00','2017-05-08 03:29:00','draft'),(57,2,2,24,25,1,'computing',76,'2017-05-08 03:36:54','2017-05-08 03:36:54','enable'),(58,2,2,26,27,1,'do later',568,'2017-05-08 14:43:15','2017-05-08 14:43:15','enable'),(59,2,2,28,29,1,'todo list',629,'2017-05-15 13:43:21','2017-05-15 13:43:21','enable'),(60,2,2,30,31,1,'done',587,'2017-05-15 13:47:26','2017-05-15 13:47:26','enable'),(61,2,2,32,33,1,'c',600,'2017-08-02 14:02:44','2017-08-02 14:02:44','enable'),(62,2,2,34,35,1,'php',610,'2017-08-02 14:05:29','2017-08-02 14:05:29','enable'),(63,2,2,36,37,1,'http',620,'2017-08-02 14:44:28','2017-08-02 14:44:28','enable'),(64,2,2,38,39,1,'python',628,'2017-08-02 14:47:04','2017-08-02 14:47:04','enable');
/*!40000 ALTER TABLE `items` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `notes`
--

DROP TABLE IF EXISTS `notes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `notes` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `item_id` int(10) unsigned NOT NULL COMMENT 'eq to items.id, 项目ID',
  `content` text NOT NULL,
  `c_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `status` tinyint(1) DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=264 DEFAULT CHARSET=utf8 COMMENT='notes';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `notes`
--

LOCK TABLES `notes` WRITE;
/*!40000 ALTER TABLE `notes` DISABLE KEYS */;
INSERT INTO `notes` VALUES (15,1,'写一套登录系统,研究 session, cookie 管理, 验证码的实现机制, 邮箱实现机制和通信原理等内容, 这一块的工作量其实还是蛮大的','2017-05-01 02:42:44',1),(19,1,'设计一个命令输入框,通过该输入框,可以作一些更灵活的工作,具体的需求还需要进一步明确（rm,mv,cp,link,touch etc）,同时加计算机网络安全方面的知识，预防安全问题\n加入标签(也就是link)功能,加入对人物,时间(日程管理)和其他一些敏感词的只能连接处理,在首页部分显示整个程序的notice,error得信息,单击首页后,切换回到默认首页.','2017-05-01 03:05:08',1),(20,1,'添加前后台的数据过滤 1','2017-05-01 03:05:29',1),(27,1,'item 和 notes 的请求管理:\n(1) 在路由解析时候,加入用户自定义的item 别名到id的映射功能,让url解析跟语言话,记住,别名对应的是一个路径\n(2) 如果一个item 下面有现存的 notes,则不直接请求\n(3) 加入新旧文本内容比较,如何有更新是,再向后台发送数据\n(5) 多个输入框处于编辑状态时,一个点击保存,会使得另外一个note的\n如果没有item,在新添加的时候,新建一个item,\n<input type=\"checkbox\" checked />方案一: 手动在控制台注册.\n<input type=\"checkbox\" checked />方案一: 修改扎ffz_item 的组成就可以了','2017-05-01 05:02:52',1),(28,1,'完成该项目的组件化管理(这个需要进一步忍辱学习vue.js)\n学习 JavaScript 中的模块化思想,依赖注入','2017-05-01 05:11:17',1),(39,1,'添加到 github 中,方便做多分支开发和管理\n','2017-05-01 08:19:33',1),(42,3,'resuet() 的参数必须是非空数组\nInvalid argument supplied for foreach()','2017-05-04 07:01:28',1),(47,5,'export -> https://github.com/kenberkeley/vue-drag-drop-sort-demo \n\n无法绕过export,弄明白 export 是什么东东?','2017-05-05 12:37:50',1),(51,1,'添加笔记归档功能','2017-05-07 12:46:54',1),(52,1,'添加笔记历史修改记录','2017-05-07 12:47:35',1),(53,0,'bug: item.id 现在不会自增','2017-05-07 13:44:28',1),(64,8,'#### items\n添加了 item 归档功能\n加入排序号码,前端实现drag,后端数据库增加一个排序号字段,具体经过为:\n(1) CSS 样式开始仔细研究这个例子,(ok)\n(2)在研究dragable的api,在研究其中的js代码的作用(初步弄明白了darg 的几个重要方法和注意事项)\n(3)并和vue整合在一起\n整理测试库的数据,让数据更加规整\n\n#### notes\n(要实现这个,需要重新设计样式,并进一步学习 CSS )\n新设计表表结构(item 设计未无限级属性结构),通过url后后面部分,在得到Module,controller和action信息后,将其余部分设计为 `current working directory`,从而实现用数据库数结构模拟文件结构\n\n添加了按下 ESC 键后,自动保存的功能\nautoHeight,具体经过为:\n(已完成)加入早期设计的text-area auto-height得特征，并弄清楚其原理\n(1)原先经过改造的auto-height可以实现自动处理粘贴事件了.通过拙劣的 set timeout 暂时实现了autoHeight 方法, auto height 现在改为监听一个回车键符号,并做相应的调整.\n(2)在使用中,发现在 document ready 后,以及 notes 数据加载好后( dom 结构未新建完成),这时候导致事件绑定失败.通过手动在控制台注册该函数可以实现.\n(3)通过传入$event解决\n\nanchor \nwindow.location.href=\"#note_22\"\n整体调整样式\n\nmarkdown 集成成功,可以正常显示.\n\n','2017-05-08 03:36:13',1),(65,60,'整理 model,controller,js,views\n先备份数据,在修改数据,测试提成添加,编辑,生成,最后回复数据,完成测试','2017-05-08 03:37:18',1),(66,58,'String.prototype.indexOf()\nArray.prototype.splice()\nobj.hasOwnProperty(prop)\n\n<div>\n<b>todo list</b>\n<input type=\"checkbox\" checked />only use by myself,because it is easily lead to XSS vulnerabilities.\n<input type=\"checkbox\" checked /> php 源码, c 语言, php 设计模式,网络知识, mysql 事务, php unit test, composer(要学,并能快速应用,产学研相互结合)\n<input type=\"checkbox\" checked />了解了vim的一些基本要,需要安装 vim bundle\n<input type=\"checkbox\" checked /> 日常编程,卡好边界值\n<input type=\"checkbox\" checked /> 查看php源代码的时候,要记住自己代码跟踪的路径,不要忘记自己最初是要做什么\n<input type=\"checkbox\" /> 可以自定义一套 .textarea 下的样式, 从而获得更好的输入体验\n</div>','2017-05-08 14:43:41',1),(67,43,'(1)今天修改了供应商付款计划中存在的一处bug, \n(2))完成了部门管理的上线工作, \n(3))修改了供应商查询,添加了付款周期,并做了相关测试.\n(4))大致了解了分包分装功能的组成','2017-05-09 10:09:17',1),(68,58,'<input type=\"checkbox\" checked />create view, \n<input type=\"checkbox\"  checked/>design view \n<input type=\"checkbox\"  checked />[了解 break attack , csrfTocen](http://breachattack.com/)[csrf](http://netsecurity.51cto.com/art/200812/102951.htm)\n','2017-05-10 02:16:08',1),(70,37,'1.修改人员管理功能测试出来的BUG。\n','2017-05-10 14:38:45',1),(71,38,'新版微商的demo制作，每个分类添加商品和图片，还没有加完','2017-05-10 14:39:18',1),(72,35,'出库管理翻版到啦确认出库，对翻版的内容进行局部测试','2017-05-10 14:39:48',1),(73,35,'出库管理功能翻版送货并打印功能','2017-05-11 11:39:57',1),(74,37,'1.修改订单管理节点，上线订单管理功能。\n2.继续测试盯着订单的功能，添加订单跟关闭订单都测试，暂时没问题。','2017-05-11 11:40:31',1),(75,40,'1.【送货管理】重构工作\n2.完成了送货明细编辑数据的功能，接下来继续进行添加商品功能,进行到了送货明细编辑数据的功能. 主要研究了分类统计表结构','2017-05-11 11:41:18',1),(76,38,'微商填充商品和图片，新官网修改样式\n','2017-05-11 11:42:02',1),(77,38,'新版微商修改   名称和详细信息自适应还未改完\n官网修改   合作流程还未写','2017-05-12 10:55:56',1),(78,43,'1.【配货管理】重构工作\n2.今天主要进行了对配货管理的捡货单进行编写和测试\n3.构建生成配货头单的测试条件\n\n在李大哥的帮助下,找到了市场提成主页查询和明细结果不一致的原因,原因为明细中未减去当日退货,也没有考虑退货大于送货的极端情况','2017-05-12 10:56:24',1),(79,40,'1.【送货管理】重构工作\n2.今天主要进行了对送货明细数据编辑的测试加上修改，现在已经完成\n3.正在进行添加商品功能.发现逻辑错误问题，但是tp不会过滤掉，正在找寻yii下的解决思路','2017-05-12 10:56:50',1),(80,37,'1.产品分析新功能的开发。\n2.开发条码打印功能，页面在制作中，功能还没开始写。继续开发条码打印功能，首页的页面已经完成，功能性的数据还在开发中。','2017-05-12 10:57:30',1),(81,35,'出库管理功能翻版，打印和送货打印翻版\n','2017-05-12 10:58:27',1),(86,60,'changed attribute are all null. It should be null when insert.\nid is not correct ','2017-05-15 08:28:52',1),(88,38,'微商页面修改，ps做gif图，php手册基础知识学习','2017-05-15 10:37:35',1),(89,35,'出库管理功能翻版完成，进行测试代码','2017-05-15 10:39:16',1),(90,59,'<input type=\"checkbox\" />[Cross-Origin Resource Sharing (CORS)](https://www.html5rocks.com/en/tutorials/cors/)\n<input type=\"checkbox\" />[详细阅读 维基百科上的Cross-Site Request Forgery (CSRF) (https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)_Prevention_Cheat_Sheet#Checking_the_Origin_Header)','2017-05-15 13:45:45',1),(91,58,'在阅读框架代码和自己实现代码的时候,存在一下几个地方的不同:\n框架代码更系统,关联较多,因此自己写的代码如果直接仿写,会感觉比较比钮. 从基础方法一点一点画出流程图仿照.\n引入单元测试对写过的代码进行测试','2017-05-15 14:29:17',1),(92,58,'静下心来学习二插树.\n(2) 至此,学完了算法的基础知识.接下来要做的就是加强c语言的高级语法知识,将应用程序推向工程画.\n(3) 好需要做的就是不断巩固目前所学的算法知识,一步一步加深理解.','2017-05-16 02:33:39',1),(94,38,'订单编辑表头固定，请购管理测试，请购添加商品表头固定出错，还没有改完','2017-05-16 10:32:56',1),(95,43,'针对临时商品,自包装商品和标准包装商品,系统测试了捡货单打印程序,但是在打印结果中,部分地方看不到,尝试装驱动,未果\n','2017-05-16 10:33:30',1),(96,40,'1.【送货管理】重构工作\n2.今天主要完成了对新增商品的提交处理，优化了处理方案，比如对没有新增商品提交后的处理\n3.接下来进行删除送货商品的功能','2017-05-16 10:34:15',1),(97,37,'修改订单管理功能中新的需求，并且进行测试。功能已经完成。\n1.修改条码打印功能测试中发现的BUG问题。','2017-05-16 10:34:42',1),(98,35,'出库管理代码测试，数据对比\n微商原型修改，新微商购物车页面完成，客户中心还在开发，请购数据对比程序移动请购完成，二次请购还未完成\n','2017-05-16 10:35:20',1),(100,8,'<input type=\"checkbox\"  checked/>[InnoDB的行锁模式及加锁方法](http://blog.csdn.net/xifeijian/article/details/20313977)\n<input type=\"checkbox\" checked />[什么时候使用表锁](http://blog.csdn.net/xifeijian/article/details/20313977)\n\n图书馆密码:nxn2382502','2017-05-16 12:07:00',1),(104,60,'(1) 主页,创建时间 (不能为时间戳),\n(2) 主页总条数始终为0,\n(3) 执行失败,最后的提示信息有问题,最有依据提示执行成功\n(4))分包分装应该按照id降序\n(5))生成分包分装,打印计数商品(条码),打印物流配货单,捡货单打印,打印两个按钮, 还差称重商品和传称不用了\n重新整理了 分包分装 计数商品打印的逻辑,弄清了奇偶校验的逻辑过程,并提取出来做了抽象','2017-05-17 09:36:10',1),(109,8,' @done 编写完成了 thinkphp 到 yii2 的 ORM 简单翻译器','2017-05-21 10:08:12',1),(113,57,'```php\n/*\n * Form full adapter class name\n */\n$adapterNamespace = \'Zend_Db_Adapter\';\nif (isset($config[\'adapterNamespace\'])) {\n	if ($config[\'adapterNamespace\'] != \'\') {\n		$adapterNamespace = $config[\'adapterNamespace\'];\n	}\n	unset($config[\'adapterNamespace\']);\n}\n```','2017-05-22 09:22:47',1),(114,55,'```php\n public function var_export(&$var, $return = false)\n    {\n        // tokens\n        $indent = \'  \';\n        $doubleArrow = \' => \';\n        $lineEnd = \',\' . PHP_EOL;\n        $newLine = PHP_EOL;\n        $strDelim = \'\\\'\';\n        // use find and repace\n        $find = [null, \'\\\\\', \'\\\'\'];\n        $replace = [\'NULL\', \'\\\\\\\\\', \'\\\\\\\'\'];\n        $out = \'\';\n        // deal with value\n        switch (gettype($var)) {\n            // deal with all variable types, that is : [integer,double,string,boolean,array,object,null,resource]\n            case \'array\':\n                $out = \'[\' . $newLine;\n                foreach ($var as $k => $v) {\n                    // deal with key\n                    if (is_string($k)) {\n                        // make string key safe\n//                        $k = strtr($k, $safe);\n                        for ($i = 0, $c = count($find); $i < $c; $i++) {\n                            $k = str_replace($find[$i], $replace[$i], $k);\n                        }\n                        $k = $strDelim . $k . $strDelim;\n                    }\n\n                    if (is_array($v)) {\n                        // 数组每一层,换一行\n                        $export = $this->var_export($v, true);\n                        $v = $newLine . $export;\n                    } else {\n                        $v = $this->var_export($v, true);\n                    }\n                    // Piece line together (输出数组中的一个键值对)\n//                    中间过程一定要用 . 相互连接, 在在这个循环的过程中,中间的结果是要保留的\n                    $out .= $k . $doubleArrow . $v . $lineEnd;\n                }\n                // 拼接数组输出结果\n                $out .= \']\';\n                break;\n            case \'string\':\n                /**\n                 * If replace_pairs contains a key which is an empty string (\"\"), FALSE will be returned.\n                 * If the str is not a scalar then it is not typecasted into a string, instead a warning is raised and NULL is returned.\n                 */\n//                $var = strtr($var, $safe);\n                // 因为外层规定了单引号,所以里层的所有单引号都要转义\n                for ($i = 0, $c = count($find); $i < $c; $i++) {\n                    $var = str_replace($find[$i], $replace[$i], $var);\n                }\n                $out = $strDelim . $var . $strDelim;\n                break;\n            // Number\n            case \'integer\':\n//for historical reasons \"double\" is returned in case of a float, and not simply \"float\"\n            case \'double\' :\n            $out = (string)$var;\n            break;\n            case \'boolean\':\n                $out = $var === true ? \'true\' : \'false\';\n                break;\n//            NULL 与 resource 放在一起处理 the type of null is in upercase\n            case \'NULL\':\n            case \'resource\':\n                $out = \'NULL\';\n                break;\n            case \'object\':\n                // Start the object export\n                $out = \'class \' . get_class($var) . \'{\' . $newLine;\n                // deal with each property\n                foreach (get_object_vars($var) as $p => $ov) {\n                    $out .= \' var $\' . $p . \' = \';\n                    if (is_array($ov)) {\n                        $export = $this->var_export($ov, true);\n                        $out .= $newLine . $export . \';\' . $newLine;\n                    } else {\n                        $out .= var_export($ov, true) . \';\' . $newLine;\n                    }\n\n                }\n                $out .= \'}\';\n                break;\n        }\n        if ($return === true) {\n            return $out;\n        } else {\n            echo $out;\n        }\n    }             \n```','2017-05-22 09:37:40',1),(116,58,'`apiGen`(安装好了,但是生成的文档格式我不太满意,需要学习 `phpar`)\nMySQL 事务等缺乏应用场景\nVue 需要使用场景\nc 语言 语法是难点,算法受到 c 语言语法掌握的限制(这个最重要)\n`kmp` 字符串查找算法的过程','2017-05-23 12:36:37',1),(117,8,'@done 把输入法跟打印出来,放到键盘上,方便查找\n@done c primer typedef 515 good notes(review for the second time, I have learned too much today, just take a rest to keep energetic)\n@done 继续学习 `pf.c @see eclipse_c`\n@done测试了计数商品打印功能\n@done [gets](https://stackoverflow.com/questions/35568263/c-gets-not-working?rq=1)','2017-05-23 12:41:27',1),(118,8,'弄清楚了 `typeof` 和 define 的区别\n@done reviewed about how to use `typedef` in c language.\n@done 复习了函数指针\n@done 大致了解了 kmp 字符串查找算法的过程\n@done 学习了 fp.c 中的showmenu 方法,学习了 puts() ,getchar(), strchr(), tolower() 等函数的使用,实践了LOG_MSG 宏的使用技巧\n@done 总结最近学习c语言的技巧\n','2017-05-23 12:45:00',1),(119,43,'重新整理了 分包分装 计数商品打印的逻辑,弄清了奇偶校验的逻辑过程,并提取出来做了抽象, 整理了其他几个方法的代码,进一步完善了注释','2017-05-23 23:06:27',1),(120,40,'.对送货打印的打印数据进行样式的修改，之前存在地址过程会覆盖掉表格的问题\n2.完成送货管理功能重构，并进行测试\n1.【送货管理】功能进行测试\n2.增加按钮功能权限，并对增加出库数量样式的修改','2017-05-23 23:08:57',1),(121,38,'请购修改提交，线上监控数据，\n新微商客户中心写了一部分\n新官网修改优势图标，\n客户展示图标修改替换','2017-05-23 23:09:30',1),(122,1,'调整一下方案,对前端数据进行缓存,暂时存储在内存中,后面考虑中做浏览器webstorage 缓存\n对用户的访问量,URL, 访问时间进行统计,做日志.   \n接下来自己亲自动手写这个函数指针\n系列帖子,慢慢看\n[xx漏洞](http://netsecurity.51cto.com/art/201408/448305_all.htm)\n@todo 将排序号的第一位设置为状态,并且最初都为偶数,方便后期插入新的状态','2017-05-24 05:45:18',1),(123,43,'重新整理了分包分装功能计数商品打印的逻辑,对 拼接 共计xx箱xx瓶 进行了重新整理,去除了层层嵌套. 去除了 seppacknum 是否大于0 的判断, 对商品包装的明细进行了简单整理,理清了其中逻辑. 将奇偶校验提取出来,作为了一个单独的方法. 由于对这个方法的调整幅度比较大,可能在之前测试的基础上引入bug,因此待进一步测试','2017-05-24 09:52:20',1),(126,59,'目前路由机制还是存在问题,解决掉\n接下来着手写登录系统\n重构依赖加载模块,让依赖加载模块真正起到作用','2017-05-28 06:54:11',1),(129,8,'完成了一个简陋的框架设计.\n将路由机制改为方法名称中带有请求方式\n@test 实现一个view层,实现controller的render方法\n在设计中体会到了体会到了各种设计的背景,如 `__get()` 和 `__set()` 的应用,\n完成了 active record insert, delete, update, findOne 得方法的初步建立, 建立了 __get() 和 __set() 方法,建立了old attribute 属性, 初步建立了表结构模型,待完成,\n引入了验证机制等, `scenario`,`map`\n了解下主流的查询构建器的功能\n虽然这项工作花费了前前后后差不多一个月的时间,但是是非常值得的,通过这次实践,进一步提升了自己对 yii2 框架的理解\n\n\n首次在个人项目中引入了 PHP unit test.并进一步开展了单元测试,下面是单元测试使用过程中的一些回顾:\n(1)采用原始的在入口文件位置 `(new Application())->run()` 方法后, 方法会要求对请求进行处理,中间的很多环节都可能出问题,并且命令行下没有办法处理请求.回头可以看看 yii2 单元测试对同样的问题的处理方式.暂时的处理方式为:\n将 `(new Application())->run()` 改为 `(new Application())`,而后开展相关测试工作.\n单元测试测试了 `@dataProvider` 等方法\n写了第一个 DB Unit 测试实例, PHPUnit 单元测试已经在个人项目中得到应用,并结合 PHP 7 的匿名类取得了很好地效果','2017-05-28 16:45:19',1),(130,55,'之前数据结构没有规划好(AR setAttribute).\nundefined index  \'val\'\n注意定义常量的方式,之前犯过错误\n// Use of undefined constant N_DEBUG - assumed \'N_DEBUG\'\ndefined(\'N_TEST\') or define(\'N_TEST\', false);\n//PDO::quote() expects parameter 1 to be string, array given\n // db->quote 只是加一对单引号,不能正确反引表名称和列名称\n//array_key_exists() expects parameter 2 to be array, null given\n类型一定要确定好.\n\n发现一个问题,浏览器开的时间太长,会卡顿的很. 目前发现就是这个样子,我怀疑存在一定程度的内存泄露','2017-05-29 01:49:53',1),(135,58,'#### it seemed that phpunit need wite list to generate code coverage report\n```\n--coverage-html <diretory> ItemTest.php\n```\n接下来需要进一步弄弄清楚这个问题','2017-05-30 09:31:15',1),(137,58,'高性能mysql,附录c,锁的调试\n进一步实践自己的依赖注入 design pattern Inversion of control\n实践设计模式上的命令模式,提高自己的首先思维能力 design pattern Command\n将 yii2 中的array Helper 类动手实践其中主要的一些方法. yii ArrayHellper::map方法自己动手实现\n\n(以yii2配套的swift email为例,了解其原理,计划3天)\n对邮箱的配置方法做了尝试，常量了中英文的各种帖子，了解了smtp IMAP pop3的大致用途和特点，确认了php发邮件调用的是linux下的sendMail命令，需要修改php配置文件和sendMail函数的配置文件。\n','2017-05-30 09:42:49',1),(139,8,'先检查数据接口格式是否正确\n今天头一遭碰到了 502 gateway error 错误,经过检查,发现根本没有访问日志,怀疑站点没起来, 然后去检查配置, 发现是今天新添加的一句话不对了. 目前已经更正过来了. 这是回到宿舍做的第一件事情.','2017-06-01 05:59:33',1),(140,43,'测试打印计数商品, 发现自己造的一条数据中打印的库存结果中库存为 undefined , 发现老程序也存在该问题,将代码更新比对和恢复后,发现问题依然存在,在李军的帮助下,发现老程序写的一个不严谨的地方,已经修改,之后进行了打印测试\n至此, 开发和测试工作告一段落, 已经提交给宋平平做进一步代码逻辑审核和测试,从明天起,切换到市场提成,解决之前存在的几个问题\n','2017-06-01 11:54:53',1),(141,38,'请购管理二次请购页面表格错乱，已改完\n微商客户中心页面完成，订单页面完成一半','2017-06-01 11:59:40',1),(142,35,'熟悉erp数据表结构，字段含义','2017-06-01 12:00:27',1),(143,37,'1.查询修改订单量数据异常问题。\n2.修改条码打印的新需求。\n3.跟南小宁研究市场提成的数据异常问题。','2017-06-01 12:02:22',1),(144,8,'哦.原来是这样, 直接使用  PDO::quote() 对字符串处理后,发现存入数据库的字符串多了一对单引号, 而参数绑定中声明参数类型为 PDO::PARAM_STR 后,数据库并没有多余的字符串, 不知这是怎么回事?\n答案:其实这不是PDO::quote()的问题,而是之前组合用了sprintf 函数,造成了存入数据库的结果多了一对引号.\n\n对 load 方法进行了全覆盖测试,解决了发现的两处bug:\n(1)对 `settype()` 的返回值不了解,滥用了该函数\n(2) 联合主键情况下,拼接查询条件时,值选取存在逻辑错误\n\n1.保存的奇葩现象已经修复,原因为写代码写糊涂了,犯了一个手误的地方,导致花了半天功夫定位bug,当然,我也傻了,明明需要的是更新,结果却 inset 了, SQL 语句都打出来了,自己居然无法定位问题,呵\n2.when click item 4, it seemed that item 1 also clicked, why?\nthe click event was bind on <ul>, not on <li>\n\nmock 一个请求我认为在单元测试中是不必要的,因此不打算再进一步弄了.','2017-06-01 13:02:05',1),(145,8,'程序执行时间 `mirotime()`,返回的结果形式为:\"微妙 秒\"\n','2017-06-01 15:24:55',1),(146,58,'明天先解决 `TCP dump` 后的 peal 处理错误问题,自己动手将其修正.\n为什么 ubuntu 在不关机的情况下无法切换 IP 地址\n负载均衡的解决方案\nperl命令','2017-06-04 02:16:09',1),(147,60,'实践利用header函数实现页面redirect的方法.参照 yii2 的实现方案和逻辑\n今天发现多次 两个版本造成的困扰.因此决定该 稳定版本的头,方便区别\n练习了删除过期的cookie的方法\n\n```\nphp -r  \nphp -m show loaded modules\nphp -l check syntax only\n```\n\n如何防止用户重复提交表单，重试或重定向？\n防止表单重复提交的八种简单有效的策略(http://www.bkjia.com/jingyan/471187.html)\n\n无限极分类，建表写出代码？\n(已经在个人项目中实践,定进一步复习)','2017-06-04 03:30:36',1),(148,60,'\nlinux 下查看目录使用空间的大小\n[du -sh file_path](https://unix.stackexchange.com/questions/185764/how-do-i-get-the-size-of-a-directory-on-the-command-line)\n```\ndu -sh /home/wwwroot/www.note.git/\n```\nfind 命令按大小查找文件\n[crontab linux 做定时任务](https://www.computerhope.com/unix/ucrontab.htm)','2017-06-04 04:32:49',1),(149,8,'特别要注意二进制浮点数元算在取整,比较等方面带来的问题,要特别注意\n[二进制浮点数在计算机中的储存形式](http://www.ruanyifeng.com/blog/2010/06/ieee_floating-point_representation.html)','2017-06-04 10:31:29',1),(150,60,'apache 重新示例\n\n```\nRewriteRule ^product/p([0-9]*)\\.html$ product.php?id=$1 [L]\n```\n\n[L] last\n\n\n打印客户端IP:`echo $_SERVER[‘REMOTE_ADDR’]`; 或者: `getenv(\'REMOTE_ADDR\')`;','2017-06-04 10:55:27',1),(151,60,'session\n`session.gc_maxlifetime`\nsession 相关函数\n`session_set_cookie_params`\n> Set cookie parameters defined in the php.ini file. The effect of this function only lasts for the duration of the script. Thus, you need to call session_set_cookie_params() for every request and before session_start() is called.','2017-06-04 12:48:48',1),(152,59,'php 网络爬虫\n\n``` php\n<?php\n $readcontents = fopen(\"http://www.phpres.com/index.html\", \"rb\");\n   $contents = stream_get_contents($readcontents);\n   fclose($readcontents);\n   echo $contents;\n   方法2:\n   echo file_get_contents(\"http://www.phpres.com/index.html\"); \n?>\n```\n\n[RFC 5322,邮箱验证,实际上还是挺复杂的](http://www.regular-expressions.info/email.html)\n\n在网站上GD库通常用来生成缩略图或者用来对图片加水印或者对网站数据生成报表\n\n加强文件读写这一块的函数操作,仿照 yii 写测试日志模块\n\nipv4 验证\n```\n\'/^(?:(?:2(?:[0-4][0-9]|5[0-5])|[0-1]?[0-9]?[0-9])\\.){3}(?:(?:2([0-4][0-9]|5[0-5])|[0-1]?[0-9]?[0-9]))$/\';\n```','2017-06-04 13:11:08',1),(153,8,'学会了git 新建分支,合并分支,解决冲突,配置 meld 作为 git 默认的 merge tool.\n\n把之前**廖雪峰**的 git 教程再过一遍,结合教程将自己的 `c program/data structure` 部分上传到svn上\n再用 MySQL dump 工具将自己的表结构导出,长传到 `git` 上面,方便别人进行二次开发','2017-06-05 06:08:39',1),(158,60,'\n如果在低版本的 PHP unit test 中,放弃php 匿名类的使用的话,可以声明以不同的进程执行程序.期间可能由于安全原因, php_ini禁用了一些文件,重新启用这些程序就可以了.\n\n学习了更多关于 PHP unit test 的技巧和方案,彻底解决了各个测试用例之间有效隔离的问题其他方面的','2017-06-10 14:10:47',1),(159,8,'[x]通过我的努力, controller 具有了可测试性, 接下来再写一个 log 方法,记录一个全局类,方便进行低成本半侵入式测试.\n[x]取消测试驱动程序中对模块的 camelCase 的做法.\n[x]重新组织测试结构,为一个控制器的各个方法建立相应的测试方法,包装后端数据接口的一致性和稳定性.\n[X]关于 preg_split 函数中的四个反斜线,已经在 stackoverflow 上提问了\n','2017-06-11 07:52:37',1),(160,8,'发现程序的性能并不好,有时候还很卡顿,特别是打开多个类似的页面的时候,情况可能更加糟糕.','2017-06-11 14:17:12',1),(161,57,'Its works in perl because you pass that directly as regex pattern  `/(?:\\\\[trn])+/`\nbut in php, you need to pass as string, so need extra escaping for backslash itself.\n\n[PHP regular expression](https://stackoverflow.com/questions/2145804/extra-backslash-needed-in-php-regexp-pattern)\n[PHP regular expression](http://www.regular-expressions.info/php.html)\n\n```php\n\"/(?:\\\\\\\\[trn])+/\"\n `$str = preg_split(\'/\\\\\\\\/\', $str, -1, PREG_SPLIT_NO_EMPTY);`\n```','2017-06-12 14:06:50',1),(162,57,'之前一直存在拼写错误的认识\n`uri Uniform Resource Identifier (URI)`\n\n\n','2017-06-12 14:07:26',1),(163,8,'如果所写的程序,测试连一个bug也发现不了,那测试的成就感又在那里的?\n我相信每个人都有梦想,但一定不是每个人都明白,其实人一生中大部分时间都是充满曲折和迷茫的前进的,真正能够走到最后的人,一定时能以平常心对待这个漫长的过程,这样,当机会真正到来的时候,一个人的希望和抱负,才不会消耗殆尽.\n楚汉之争,国共之争,信心来源于对历史的吸收,以及对自我价值的肯定.源于对别人的包容和对自我以平常心态的反思.\n不以物喜,不以己悲','2017-06-13 13:30:17',1),(164,8,'再次了解了 php yeld 关键字的用法和使用场景.','2017-06-18 01:10:13',1),(165,8,'我们可使用“-include”来代替“include”，忽略由于包含文件不存在或者无法创建时的错误提示（“-”的意思是告诉make，忽略此操作的错误。make继续执行','2017-06-18 01:42:04',1),(166,62,'```\n/home/ffz# php -r \"echo gethostbyname(\'www.baidu.com\').PHP_EOL;\"\n112.80.248.74\n```','2017-06-18 02:29:21',1),(167,8,'GET /resources/public-data/ HTTP/1.1\nHost: bar.other\nUser-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.5; en-US; rv:1.9.1b3pre) Gecko/20081130 Minefield/3.1b3pre\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-us,en;q=0.5\nAccept-Encoding: gzip,deflate\nAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\nConnection: keep-alive\nReferer: http://foo.example/examples/access-control/simpleXSInvocation.html\nOrigin: http://foo.example\n\n\nHTTP/1.1 200 OK\nDate: Mon, 01 Dec 2008 00:23:53 GMT\nServer: Apache/2.0.61 \nAccess-Control-Allow-Origin: *\nKeep-Alive: timeout=2, max=100\nConnection: Keep-Alive\nTransfer-Encoding: chunked\nContent-Type: application/xml\n\n[XML Data]','2017-06-18 04:11:00',1),(168,8,'the server responds with a Access-Control-Allow-Origin: * which means that the resource can be accessed by any domain in a cross-site manner. If the resource owners at http://bar.other wished to restrict access to the resource to be only from http://foo.example, they would send back:\n\nAccess-Control-Allow-Origin: http://foo.example','2017-06-18 04:13:25',1),(169,8,'The server also sends Access-Control-Allow-Headers with a value of \"X-PINGOTHER, Content-Type\", confirming that these are permitted headers to be used with the actual request. Like Access-Control-Allow-Methods, Access-Control-Allow-Headers is a comma separated list of acceptable headers.','2017-06-18 04:26:33',1),(170,58,'[c 获取参数选项](https://stackoverflow.com/questions/7489093/getopt-long-proper-way-to-use-it)','2017-06-18 05:51:02',1),(175,58,'c语言长期学,优先学,特别是指针,内存管理等,为学习算法只是打下基础,为学习 php 源代码打下基础','2017-06-25 03:35:33',1),(176,61,'学习了C 语言中的的 processor glue ,Variadic Macros','2017-06-26 13:21:50',1),(181,58,'初步了解了 php streamWrapper \n\n[有空好好看看这篇贴子,建立包](http://blog.csdn.net/u011474028/article/details/54973571)\n\n','2017-06-28 13:52:47',1),(200,58,'尝试在此安装qt','2017-07-04 15:26:14',1),(211,58,'《C和指针》  \n《C缺陷与陷阱》  \n《C专家编程》这本书八卦比较多，趣味性强   \n《C语言深度解剖》国人写的，含金量比较高，针对C语言中容易理解错误或发生偏差的地方详细','2017-07-09 02:27:54',1),(213,46,'```\nmysql --auto-rehash -h 101.200.196.64 -P 3306 -u myffzTestRemote -pmtr#25150531 ffzerp2\n```','2017-07-10 08:19:01',1),(224,58,'要读懂 PHP 源代码, 需要对 php 内核比较熟悉，了 PHP内核中主要的数据结构的实现','2017-07-17 09:28:46',1),(228,1,'\n\nmarkdown 和 highlight 调用的频率实在太高了，严重影响了性能。对次做了调整：\n将hightlight指令改为:\n\n```\n\n    Vue.directive(\'highlightjs\', {\n        inserted: function (el) {\n            var blocks = el.querySelectorAll(\'pre code\');\n            Array.prototype.forEach.call(blocks, hljs.highlightBlock);\n        },\n        update: function (el) {\n            var blocks = el.querySelectorAll(\'pre code\');\n            Array.prototype.forEach.call(blocks, hljs.highlightBlock);\n        }\n    });\n```\n\n通过此次改造之后，不许要时时更新。 但是仍然存在一个比较严重的问题，就是渲染的时候会更新全文的所有节点，这个是出乎意料的，目前原因还没有弄清楚，等待进一步排查问题','2017-07-19 09:46:12',1),(231,59,'``` javascript\n    /**\n     * Helper that recursively merges two data objects together.\n     */\n    function mergeData (to, from) {\n        if (!from) { return to }\n        var key, toVal, fromVal;\n        var keys = Object.keys(from);\n        for (var i = 0; i < keys.length; i++) {\n            key = keys[i];\n            toVal = to[key];\n            fromVal = from[key];\n            if (!hasOwn(to, key)) {\n                set(to, key, fromVal);\n            } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n                mergeData(toVal, fromVal);\n            }\n        }\n        return to\n    }\n\n```','2017-07-20 07:07:21',1),(232,57,'进入 IPYthon 交互界面\n\n```\nroot@ubuntu:/home/ffz# python3\nPython 3.5.2 (default, Sep 10 2016, 08:21:44) \n[GCC 5.4.0 20160609] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> \n```','2017-07-21 03:23:42',1),(233,57,'```\n#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n```\n\n第一行注释是为了告诉Linux/OS X系统，这是一个Python可执行程序，Windows系统会忽略这个注释；\n\n第二行注释是为了告诉Python解释器，按照UTF-8编码读取源代码，否则，你在源代码中写的中文输出可能会有乱码。\n\n申明了UTF-8编码并不意味着你的.py文件就是UTF-8编码的，必须并且要确保文本编辑器正在使用UTF-8 without BOM编码：\n\n\'中文\'.encode(\'utf-8\')\n\n数组最后一个元素\nclassmates[-1]','2017-07-21 05:03:54',1),(234,57,'tuple:\nA set of comma-separated values passed to a program or operating system as a parameter to a function call','2017-07-21 05:23:42',1),(235,57,'只有一个元素时，元祖要消除歧义\nt = (1,)\n\n二是通过dict提供的get方法，如果key不存在，可以返回None，或者自己指定的value：\n\n```\n>>> d.get(\'Thomas\')\n>>> d.get(\'Thomas\', -1)\n-1\n```','2017-07-21 05:25:42',1),(236,57,'重复元素在set中自动被过滤：\nset可以看成数学意义上的无序和无重复元素的集合，因此，两个set可以做数学意义上的交集、并集等操作：','2017-07-21 05:43:33',1),(237,57,'定义默认参数要牢记一点：默认参数必须指向不变对象！\n\n要修改上面的例子，我们可以用None这个不变对象来实现：\n\n```\ndef add_end(L=None):\n    if L is None:\n        L = []\n    L.append(\'END\')\n    return L\n```','2017-07-21 06:03:25',1),(238,57,'```\ndef calc(*numbers):\n    sum = 0\n    for n in numbers:\n        sum = sum + n * n\n    return sum\n```\n\n定义可变参数和定义一个list或tuple参数相比，仅仅在参数前面加了一个*号。在函数内部，参数numbers接收到的是一个tuple\n\n\n所以Python允许你在list或tuple前面加一个*号，把list或tuple的元素变成可变参数传进去：\n\n```\n>>> nums = [1, 2, 3]\n>>> calc(*nums)\n14\n```\n','2017-07-21 06:06:06',1),(239,57,'https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431752945034eb82ac80a3e64b9bb4929b16eeed1eb9000','2017-07-21 06:18:23',1),(240,57,'class Student(object):\n\n    @property\n    def score(self):\n        return self._score\n\n    @score.setter\n    def score(self, value):\n        if not isinstance(value, int):\n            raise ValueError(\'score must be an integer!\')\n        if value < 0 or value > 100:\n            raise ValueError(\'score must between 0 ~ 100!\')\n        self._score = value','2017-07-21 06:24:59',1),(241,57,'```\nclass Chain(object):\n\n    def __init__(self, path=\'\'):\n        self._path = path\n\n    def __getattr__(self, path):\n        return Chain(\'%s/%s\' % (self._path, path))\n\n    def __str__(self):\n        return self._path\n\n    __repr__ = __str__\n试试：\n\n>>> Chain().status.user.timeline.list\n\'/status/user/timeline/list\'\n```','2017-07-21 06:36:24',1),(242,64,'```\n另一种方法是在命令行通过参数-m unittest直接运行单元测试：\n\n$ python3 -m unittest mydict_test\n\n```','2017-07-21 06:46:18',1),(243,64,'python doctest\n```\n# mydict2.py\nclass Dict(dict):\n    \'\'\'\n    Simple dict but also support access as x.y style.\n\n    >>> d1 = Dict()\n    >>> d1[\'x\'] = 100\n    >>> d1.x\n    100\n    >>> d1.y = 200\n    >>> d1[\'y\']\n    200\n    >>> d2 = Dict(a=1, b=2, c=\'3\')\n    >>> d2.c\n    \'3\'\n    >>> d2[\'empty\']\n    Traceback (most recent call last):\n        ...\n    KeyError: \'empty\'\n    >>> d2.empty\n    Traceback (most recent call last):\n        ...\n    AttributeError: \'Dict\' object has no attribute \'empty\'\n    \'\'\'\n    def __init__(self, **kw):\n        super(Dict, self).__init__(**kw)\n\n    def __getattr__(self, key):\n        try:\n            return self[key]\n        except KeyError:\n            raise AttributeError(r\"\'Dict\' object has no attribute \'%s\'\" % key)\n\n    def __setattr__(self, key, value):\n        self[key] = value\n\nif __name__==\'__main__\':\n    import doctest\n    doctest.testmod()\n\n```','2017-07-21 06:50:30',1),(244,64,'python \n\n(https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431915578556ad30ab3933ae4e82a03ee2e9a4f70871000)\n\n```\n\nassert n != 0, \'n is zero!\'\nprint\nlogging\npdb.set_trace()\npdb\nPyCharm Eclipse pydev\n```','2017-07-21 06:54:24',1),(246,63,'\n> So until something changes, URI is best used when you’re referring to a resource just by its name or some other fragment. And when you’re giving both the name of a resource and the method of accessing it (like a full URL), it’s best to call that a URL.\n','2017-07-21 10:46:15',1),(248,59,'### 人最大的乐趣在对位置的期待，一样的场景，心态绝对命运\n\n### 面试锻炼的最根本的能力\n\n> 自信心，相信自己，方能突破重重束缚。\n\n### 接下来面试环节技术准备的三大方向\n\n#### 个人 OA 系统开发\n\n借助自己功能的发布之际，对照 yii2 框架写一套自己的框架，在抽象等方面要前所未有的放开手脚取做。使得项目配备完善的 debug 系统，系统日志功能，ORM 工具链，代码自动生成工具，最主要要留好接口，让自己的框架的视图层可以与其他框架达到框架协作的目的（即一套代码视图层代码，可能由两套框架形成，从事实现切换框架的过程种重构工作的平滑过度）\n\nvue 的源码看核心的一部分，方式以阅读为主，少部分关键地方练习。\n\ncss 趁机学习和巩固。\n\n个人向目预留一个月的开发周期。通过这个月的训练，加深对设计模式的学习和应用。\n\n#### 计算机网络基础\n补充计算机网络基础只是，根据面试的情况作适度调整，不用过于深入理解，这在进入下家公司后，是自然而然的事情。\n#### 算法(装个环节的重中之重，算法的实现上优先用 python 完成，主要考虑便捷的文档测试和单元测试)，在使用过\n\n程中，可以不拘泥于c 语言的复杂的内存管理等。c语言方面缺乏工程时间和应用的能力，手头也没有解决这方面问题的资源，形式以 letcode 刷题目和结合 hava 算法书记实践为主。\n终端的操作方式野比较熟悉了，无论 php,java, c 语言也都是哪些坑，之前已近踩过了。\n中途多和孙宇衡，王长富，杨海涛和周小旺交流。','2017-07-25 02:07:27',1),(250,60,'上午取仓库值班。\n下午在宋平平的帮助下测试市场提成的代码，已完成上线了。\n和李军讨论 他遇到的一个问题，进过定位，可能是系统和版本差别。','2017-07-25 09:35:42',1),(251,1,'上午取仓库岗位体验。尝试修理一台打印机，根据描述现象说打印机打印的动心有黑条，猜测可能打印机里边不干净，对其进行了清理后，为起到预期作用，以通知进一步维修。发现存在两处扫码枪问题，定位了串枪的具体表现。\n\n#### 扫码入库\n下午查找了 音频文件 部分未播放的问题，未果。安装了音频软件，将 mp3 声音放大。\n','2017-07-26 09:52:58',1),(252,8,'配合 v-if 方法和 vue directive unbind life hook 解决了 markdown 性能问题。\n\n| Tables        | Are           | Cool  |\n|---|---|---|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |','2017-07-27 08:16:13',1),(254,60,'上午岗位体验，查看了扫码入库功能的使用情况，暂无问题。\n下午大概了解了 Vue 中事件处理绑定的大致流程。之后，翻阅了中文手册，了解了 Vue 的 inserted, update, unbind 等四种 life hook,将之前 markdown 编辑指令的 update 方法替换为 unbind 方法, 并配合 v-if 指令，优化了 markdown 大大函数的渲染频繁程度。\n\n接着找了自定义粘贴实践的指令，实习了粘贴任意文字，粘贴对应的时间的功能，该方法的健壮程度需要进一步验证。','2017-07-27 09:22:38',1),(255,60,'ls 按照日期排列:\n\n     ls -ltr  ','2017-07-28 01:16:32',1),(256,55,'孙宇衡项目个人笔记无法换行','2017-08-01 15:20:53',1),(257,59,'[csrf 攻击预防](https://www.zhihu.com/question/39011147?sort=created)','2017-08-02 15:24:52',1),(258,62,'// bool true on success or false on failure. 不能将settype()的结果直接赋值给变量','2017-08-03 02:24:46',1),(259,63,'[tcp 三次握手](https://www.nowcoder.com/questionTerminal/2d5a65326a4c43ffa87ca7bf5ad1a632)','2017-08-03 11:55:53',1),(260,59,'letcode https://leetcode.com/problems/reverse-integer/description/\n\n[!] Method is generated. Documentation taken from corresponding module.','2017-08-03 14:51:19',1),(261,64,'```python\n\'\'\'\n>>> 1 << 0\n1\n>>> 1 << 1\n2\n>>> 1 << 2\n4\n\'\'\'\nbitmask\n```\n[how to use bitmask](https://stackoverflow.com/questions/18591924/how-to-use-bitmask#)\n','2017-08-03 23:41:42',1),(262,64,'### yii2 是一个现代框架\nyii2  是一个中型 web 框架,关注 yii2 本身更多的是因为公司项目需要.使用中发现其具有以下优点:\n(1)开发便捷性方面.自动化工具很方便,借助工具,快速生成了大量表单的AR模型. ORM 组件 filterWhere,filterAndWhere非常方便, active record 的 behavior ,event 机制使得代码组织灵活和清晰, 表单验证方面也很方便. \n\n(2)在安全性方面,yii2 对所有查询的字段加反引号(mysql),并且所有where条件采用了模拟的参数绑定方式. 也能方便的对cookie进行加密,如cookie中加入加密的ip地址,然后在服务端验证.从框架层面上实现 csrf 预防,默认对所有表单加入了 token 验证. \n\n(3)发达的日志和监控系统,友好的debug界面,很低的错误级别,(error notice, PDO 还开启了 PDOException 报错), 我在项目中轻易能够记录到自己执行的所有 sql 语句(我们的 mysql 测试主机在远程虚拟主机上,我没有权限监控 mysql general log).线上也是遇到错误,可以第一时间发送邮件给开发人员,感觉还是比较方便.\n\n(4)非常友好的ide提示,连自动化生产的工具都带有方便 IDE   提示的注释,(虽然也有抽象层次较高造成部分情况下代码跟错位置).整个开发过程中, IDE  提示看上去非常干净,可以快速将注意力放到一些错误上,这一点很难得. 非常详细的注释和漂亮的官方文档,当然,我更喜欢直接看注释.\n\n(5)只需要改改配置文件,就可以从单一数据库切换到主从数据库,代码中还考虑了连接异常的处理机制,这个必须赞.\n\n(6)大量可选的缓存,极大的权衡了开发效率和运行性能. AR模型中,表结构可以缓存;页面中,页面内容也可以缓存;新建对象等都会缓存创建过的对象,配置以及反射类(dicontainer, service locator); 连自动查找机制,都采用一个自动化生产的一个大数组 $classMap 提前缓存好,加快运行速度.\n\n\n### phpUnit\nphpUnit 是类似 java 中的 Junit 的单元测试框架,通过引入并适当扩展了 phpUnit 类,方便测试个人写的一些类.如之前写的针对 mysql 的 ActiveRecord, 依赖注入器等,另外, phpUnit 源码本身也有许多值得学习的设计思路和良好的编程实践.\n','2017-08-04 08:27:00',1),(263,59,'今天对最近一段时间的工作开展情况做一下总结吧:\n(1) 折腾','2017-08-06 03:59:44',1);
/*!40000 ALTER TABLE `notes` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `users` (
  `user_id` bigint(20) unsigned NOT NULL,
  `user_name` varchar(255) NOT NULL,
  `password` varchar(32) NOT NULL,
  `user_type` varchar(20) NOT NULL COMMENT '1,member;2,admin',
  `ts_created` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `ts_last_login` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-08-06 12:22:36
